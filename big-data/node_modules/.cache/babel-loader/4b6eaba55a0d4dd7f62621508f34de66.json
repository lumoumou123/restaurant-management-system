{"remainingRequest":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollRankingBoard\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollRankingBoard\\src\\main.vue","mtime":1742859688883},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\babel.config.js","mtime":1725678814000},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\babel-loader\\lib\\index.js","mtime":1742859682775},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js","mtime":1742859683968}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2U2Nyb2xsUmFua2luZ0JvYXJkJywKICBtaXhpbnM6IFthdXRvUmVzaXplXSwKICBwcm9wczogewogICAgY29uZmlnOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gKHt9KQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlZjogJ3Njcm9sbC1yYW5raW5nLWJvYXJkJywKICAgICAgZGVmYXVsdENvbmZpZzogewogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBCb2FyZCBkYXRhCiAgICAgICAgICogQHR5cGUge0FycmF5PE9iamVjdD59CiAgICAgICAgICogQGRlZmF1bHQgZGF0YSA9IFtdCiAgICAgICAgICovCiAgICAgICAgZGF0YTogW10sCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFJvdyBudW0KICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICAqIEBkZWZhdWx0IHJvd051bSA9IDUKICAgICAgICAgKi8KICAgICAgICByb3dOdW06IDUsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFNjcm9sbCB3YWl0IHRpbWUKICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICAqIEBkZWZhdWx0IHdhaXRUaW1lID0gMjAwMAogICAgICAgICAqLwogICAgICAgIHdhaXRUaW1lOiAyMDAwLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDYXJvdXNlbCB0eXBlCiAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgKiBAZGVmYXVsdCBjYXJvdXNlbCA9ICdzaW5nbGUnCiAgICAgICAgICogQGV4YW1wbGUgY2Fyb3VzZWwgPSAnc2luZ2xlJyB8ICdwYWdlJwogICAgICAgICAqLwogICAgICAgIGNhcm91c2VsOiAnc2luZ2xlJywKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gVmFsdWUgdW5pdAogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgdW5pdCA9ICcnCiAgICAgICAgICogQGV4YW1wbGUgdW5pdCA9ICd0b24nCiAgICAgICAgICovCiAgICAgICAgdW5pdDogJycsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIEF1dG8gc29ydCBieSB2YWx1ZQogICAgICAgICAqIEB0eXBlIHtCb29sZWFufQogICAgICAgICAqIEBkZWZhdWx0IHNvcnQgPSB0cnVlCiAgICAgICAgICovCiAgICAgICAgc29ydDogdHJ1ZSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gVmFsdWUgZm9ybWF0dGVyCiAgICAgICAgICogQHR5cGUge0Z1bmN0aW9ufQogICAgICAgICAqIEBkZWZhdWx0IHZhbHVlRm9ybWF0dGVyID0gbnVsbAogICAgICAgICAqLwogICAgICAgIHZhbHVlRm9ybWF0dGVyOiBudWxsCiAgICAgIH0sCiAgICAgIG1lcmdlZENvbmZpZzogbnVsbCwKICAgICAgcm93c0RhdGE6IFtdLAogICAgICByb3dzOiBbXSwKICAgICAgaGVpZ2h0czogW10sCiAgICAgIGFuaW1hdGlvbkluZGV4OiAwLAogICAgICBhbmltYXRpb25IYW5kbGVyOiAnJywKICAgICAgdXBkYXRlcjogMAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb25maWcoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBzdG9wQW5pbWF0aW9uLAogICAgICAgIGNhbGNEYXRhCiAgICAgIH0gPSB0aGlzOwogICAgICBzdG9wQW5pbWF0aW9uKCk7CiAgICAgIGNhbGNEYXRhKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZnRlckF1dG9SZXNpemVNaXhpbkluaXQoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBjYWxjRGF0YQogICAgICB9ID0gdGhpczsKICAgICAgY2FsY0RhdGEoKTsKICAgIH0sCiAgICBvblJlc2l6ZSgpIHsKICAgICAgY29uc3QgewogICAgICAgIG1lcmdlZENvbmZpZywKICAgICAgICBjYWxjSGVpZ2h0cwogICAgICB9ID0gdGhpczsKICAgICAgaWYgKCFtZXJnZWRDb25maWcpIHJldHVybjsKICAgICAgY2FsY0hlaWdodHModHJ1ZSk7CiAgICB9LAogICAgY2FsY0RhdGEoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBtZXJnZUNvbmZpZywKICAgICAgICBjYWxjUm93c0RhdGEKICAgICAgfSA9IHRoaXM7CiAgICAgIG1lcmdlQ29uZmlnKCk7CiAgICAgIGNhbGNSb3dzRGF0YSgpOwogICAgICBjb25zdCB7CiAgICAgICAgY2FsY0hlaWdodHMKICAgICAgfSA9IHRoaXM7CiAgICAgIGNhbGNIZWlnaHRzKCk7CiAgICAgIGNvbnN0IHsKICAgICAgICBhbmltYXRpb24KICAgICAgfSA9IHRoaXM7CiAgICAgIGFuaW1hdGlvbih0cnVlKTsKICAgIH0sCiAgICBtZXJnZUNvbmZpZygpIHsKICAgICAgbGV0IHsKICAgICAgICBjb25maWcsCiAgICAgICAgZGVmYXVsdENvbmZpZwogICAgICB9ID0gdGhpczsKICAgICAgdGhpcy5tZXJnZWRDb25maWcgPSBkZWVwTWVyZ2UoZGVlcENsb25lKGRlZmF1bHRDb25maWcsIHRydWUpLCBjb25maWcgfHwge30pOwogICAgfSwKICAgIGNhbGNSb3dzRGF0YSgpIHsKICAgICAgbGV0IHsKICAgICAgICBkYXRhLAogICAgICAgIHJvd051bSwKICAgICAgICBzb3J0CiAgICAgIH0gPSB0aGlzLm1lcmdlZENvbmZpZzsKICAgICAgc29ydCAmJiBkYXRhLnNvcnQoKHsKICAgICAgICB2YWx1ZTogYQogICAgICB9LCB7CiAgICAgICAgdmFsdWU6IGIKICAgICAgfSkgPT4gewogICAgICAgIGlmIChhID4gYikgcmV0dXJuIC0xOwogICAgICAgIGlmIChhIDwgYikgcmV0dXJuIDE7CiAgICAgICAgaWYgKGEgPT09IGIpIHJldHVybiAwOwogICAgICB9KTsKICAgICAgY29uc3QgdmFsdWUgPSBkYXRhLm1hcCgoewogICAgICAgIHZhbHVlCiAgICAgIH0pID0+IHZhbHVlKTsKICAgICAgY29uc3QgbWluID0gTWF0aC5taW4oLi4udmFsdWUpIHx8IDA7CgogICAgICAvLyBhYnMgb2YgbWluCiAgICAgIGNvbnN0IG1pbkFicyA9IE1hdGguYWJzKG1pbik7CiAgICAgIGNvbnN0IG1heCA9IE1hdGgubWF4KC4uLnZhbHVlKSB8fCAwOwoKICAgICAgLy8gYWJzIG9mIG1heAogICAgICBjb25zdCBtYXhBYnMgPSBNYXRoLmFicyhtYXgpOwogICAgICBjb25zdCB0b3RhbCA9IG1heCArIG1pbkFiczsKICAgICAgZGF0YSA9IGRhdGEubWFwKChyb3csIGkpID0+ICh7CiAgICAgICAgLi4ucm93LAogICAgICAgIHJhbmtpbmc6IGkgKyAxLAogICAgICAgIHBlcmNlbnQ6IChyb3cudmFsdWUgKyBtaW5BYnMpIC8gdG90YWwgKiAxMDAKICAgICAgfSkpOwogICAgICBjb25zdCByb3dMZW5ndGggPSBkYXRhLmxlbmd0aDsKICAgICAgaWYgKHJvd0xlbmd0aCA+IHJvd051bSAmJiByb3dMZW5ndGggPCAyICogcm93TnVtKSB7CiAgICAgICAgZGF0YSA9IFsuLi5kYXRhLCAuLi5kYXRhXTsKICAgICAgfQogICAgICBkYXRhID0gZGF0YS5tYXAoKGQsIGkpID0+ICh7CiAgICAgICAgLi4uZCwKICAgICAgICBzY3JvbGw6IGkKICAgICAgfSkpOwogICAgICB0aGlzLnJvd3NEYXRhID0gZGF0YTsKICAgICAgdGhpcy5yb3dzID0gZGF0YTsKICAgIH0sCiAgICBjYWxjSGVpZ2h0cyhvbnJlc2l6ZSA9IGZhbHNlKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBoZWlnaHQsCiAgICAgICAgbWVyZ2VkQ29uZmlnCiAgICAgIH0gPSB0aGlzOwogICAgICBjb25zdCB7CiAgICAgICAgcm93TnVtLAogICAgICAgIGRhdGEKICAgICAgfSA9IG1lcmdlZENvbmZpZzsKICAgICAgY29uc3QgYXZnSGVpZ2h0ID0gaGVpZ2h0IC8gcm93TnVtOwogICAgICB0aGlzLmF2Z0hlaWdodCA9IGF2Z0hlaWdodDsKICAgICAgaWYgKCFvbnJlc2l6ZSkgdGhpcy5oZWlnaHRzID0gbmV3IEFycmF5KGRhdGEubGVuZ3RoKS5maWxsKGF2Z0hlaWdodCk7CiAgICB9LAogICAgYXN5bmMgYW5pbWF0aW9uKHN0YXJ0ID0gZmFsc2UpIHsKICAgICAgbGV0IHsKICAgICAgICBhdmdIZWlnaHQsCiAgICAgICAgYW5pbWF0aW9uSW5kZXgsCiAgICAgICAgbWVyZ2VkQ29uZmlnLAogICAgICAgIHJvd3NEYXRhLAogICAgICAgIGFuaW1hdGlvbiwKICAgICAgICB1cGRhdGVyCiAgICAgIH0gPSB0aGlzOwogICAgICBjb25zdCB7CiAgICAgICAgd2FpdFRpbWUsCiAgICAgICAgY2Fyb3VzZWwsCiAgICAgICAgcm93TnVtCiAgICAgIH0gPSBtZXJnZWRDb25maWc7CiAgICAgIGNvbnN0IHJvd0xlbmd0aCA9IHJvd3NEYXRhLmxlbmd0aDsKICAgICAgaWYgKHJvd051bSA+PSByb3dMZW5ndGgpIHJldHVybjsKICAgICAgaWYgKHN0YXJ0KSB7CiAgICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIHdhaXRUaW1lKSk7CiAgICAgICAgaWYgKHVwZGF0ZXIgIT09IHRoaXMudXBkYXRlcikgcmV0dXJuOwogICAgICB9CiAgICAgIGNvbnN0IGFuaW1hdGlvbk51bSA9IGNhcm91c2VsID09PSAnc2luZ2xlJyA/IDEgOiByb3dOdW07CiAgICAgIGxldCByb3dzID0gcm93c0RhdGEuc2xpY2UoYW5pbWF0aW9uSW5kZXgpOwogICAgICByb3dzLnB1c2goLi4ucm93c0RhdGEuc2xpY2UoMCwgYW5pbWF0aW9uSW5kZXgpKTsKICAgICAgdGhpcy5yb3dzID0gcm93cy5zbGljZSgwLCByb3dOdW0gKyAxKTsKICAgICAgdGhpcy5oZWlnaHRzID0gbmV3IEFycmF5KHJvd0xlbmd0aCkuZmlsbChhdmdIZWlnaHQpOwogICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMzAwKSk7CiAgICAgIGlmICh1cGRhdGVyICE9PSB0aGlzLnVwZGF0ZXIpIHJldHVybjsKICAgICAgdGhpcy5oZWlnaHRzLnNwbGljZSgwLCBhbmltYXRpb25OdW0sIC4uLm5ldyBBcnJheShhbmltYXRpb25OdW0pLmZpbGwoMCkpOwogICAgICBhbmltYXRpb25JbmRleCArPSBhbmltYXRpb25OdW07CiAgICAgIGNvbnN0IGJhY2sgPSBhbmltYXRpb25JbmRleCAtIHJvd0xlbmd0aDsKICAgICAgaWYgKGJhY2sgPj0gMCkgYW5pbWF0aW9uSW5kZXggPSBiYWNrOwogICAgICB0aGlzLmFuaW1hdGlvbkluZGV4ID0gYW5pbWF0aW9uSW5kZXg7CiAgICAgIHRoaXMuYW5pbWF0aW9uSGFuZGxlciA9IHNldFRpbWVvdXQoYW5pbWF0aW9uLCB3YWl0VGltZSAtIDMwMCk7CiAgICB9LAogICAgc3RvcEFuaW1hdGlvbigpIHsKICAgICAgY29uc3QgewogICAgICAgIGFuaW1hdGlvbkhhbmRsZXIsCiAgICAgICAgdXBkYXRlcgogICAgICB9ID0gdGhpczsKICAgICAgdGhpcy51cGRhdGVyID0gKHVwZGF0ZXIgKyAxKSAlIDk5OTk5OTsKICAgICAgaWYgKCFhbmltYXRpb25IYW5kbGVyKSByZXR1cm47CiAgICAgIGNsZWFyVGltZW91dChhbmltYXRpb25IYW5kbGVyKTsKICAgIH0KICB9LAogIGRlc3Ryb3llZCgpIHsKICAgIGNvbnN0IHsKICAgICAgc3RvcEFuaW1hdGlvbgogICAgfSA9IHRoaXM7CiAgICBzdG9wQW5pbWF0aW9uKCk7CiAgfQp9Ow=="},{"version":3,"names":["autoResize","deepMerge","deepClone","name","mixins","props","config","type","Object","default","data","ref","defaultConfig","rowNum","waitTime","carousel","unit","sort","valueFormatter","mergedConfig","rowsData","rows","heights","animationIndex","animationHandler","updater","watch","stopAnimation","calcData","methods","afterAutoResizeMixinInit","onResize","calcHeights","mergeConfig","calcRowsData","animation","value","a","b","map","min","Math","minAbs","abs","max","maxAbs","total","row","i","ranking","percent","rowLength","length","d","scroll","onresize","height","avgHeight","Array","fill","start","Promise","resolve","setTimeout","animationNum","slice","push","splice","back","clearTimeout","destroyed"],"sources":["node_modules/@jiaminghi/data-view/lib/components/scrollRankingBoard/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-scroll-ranking-board\" :ref=\"ref\">\n    <div\n      class=\"row-item\"\n      v-for=\"(item, i) in rows\"\n      :key=\"item.toString() + item.scroll\"\n      :style=\"`height: ${heights[i]}px;`\"\n    >\n      <div class=\"ranking-info\">\n        <div class=\"rank\">No.{{ item.ranking }}</div>\n        <div class=\"info-name\" v-html=\"item.name\" />\n        <div class=\"ranking-value\">{{ mergedConfig.valueFormatter ? mergedConfig.valueFormatter(item) : item.value + mergedConfig.unit }}</div>\n      </div>\n\n      <div class=\"ranking-column\">\n        <div\n          class=\"inside-column\"\n          :style=\"`width: ${item.percent}%;`\"\n        >\n          <div class=\"shine\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvScrollRankingBoard',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      ref: 'scroll-ranking-board',\n\n      defaultConfig: {\n        /**\n         * @description Board data\n         * @type {Array<Object>}\n         * @default data = []\n         */\n        data: [],\n        /**\n         * @description Row num\n         * @type {Number}\n         * @default rowNum = 5\n         */\n        rowNum: 5,\n        /**\n         * @description Scroll wait time\n         * @type {Number}\n         * @default waitTime = 2000\n         */\n        waitTime: 2000,\n        /**\n         * @description Carousel type\n         * @type {String}\n         * @default carousel = 'single'\n         * @example carousel = 'single' | 'page'\n         */\n        carousel: 'single',\n        /**\n         * @description Value unit\n         * @type {String}\n         * @default unit = ''\n         * @example unit = 'ton'\n         */\n        unit: '',\n        /**\n         * @description Auto sort by value\n         * @type {Boolean}\n         * @default sort = true\n         */\n        sort: true,\n        /**\n         * @description Value formatter\n         * @type {Function}\n         * @default valueFormatter = null\n         */\n        valueFormatter: null\n      },\n\n      mergedConfig: null,\n\n      rowsData: [],\n\n      rows: [],\n\n      heights: [],\n\n      animationIndex: 0,\n\n      animationHandler: '',\n\n      updater: 0\n    }\n  },\n  watch: {\n    config () {\n      const { stopAnimation, calcData } = this\n\n      stopAnimation()\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { mergedConfig, calcHeights } = this\n\n      if (!mergedConfig) return\n\n      calcHeights(true)\n    },\n    calcData () {\n      const { mergeConfig, calcRowsData } = this\n\n      mergeConfig()\n\n      calcRowsData()\n\n      const { calcHeights } = this\n\n      calcHeights()\n\n      const { animation } = this\n\n      animation(true)\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    calcRowsData () {\n      let { data, rowNum, sort } = this.mergedConfig\n\n      sort && data.sort(({ value: a }, { value: b }) => {\n        if (a > b) return -1\n        if (a < b) return 1\n        if (a === b) return 0\n      })\n\n      const value = data.map(({ value }) => value)\n      \n      const min = Math.min(...value) || 0\n\n      // abs of min\n      const minAbs = Math.abs(min)\n\n      const max = Math.max(...value) || 0\n\n      // abs of max\n      const maxAbs = Math.abs(max)\n\n      const total = max + minAbs\n\n      data = data.map((row, i) => ({ ...row, ranking: i + 1, percent: (row.value + minAbs) / total * 100 }))\n\n      const rowLength = data.length\n\n      if (rowLength > rowNum && rowLength < 2 * rowNum) {\n        data = [...data, ...data]\n      }\n\n      data = data.map((d, i) => ({ ...d, scroll: i }))\n\n      this.rowsData = data\n      this.rows = data\n    },\n    calcHeights (onresize = false) {\n      const { height, mergedConfig } = this\n\n      const { rowNum, data } = mergedConfig\n\n      const avgHeight = height / rowNum\n\n      this.avgHeight = avgHeight\n\n      if (!onresize) this.heights = new Array(data.length).fill(avgHeight)\n    },\n    async animation (start = false) {\n      let { avgHeight, animationIndex, mergedConfig, rowsData, animation, updater } = this\n\n      const { waitTime, carousel, rowNum } = mergedConfig\n\n      const rowLength = rowsData.length\n\n      if (rowNum >= rowLength) return\n\n      if (start) {\n        await new Promise(resolve => setTimeout(resolve, waitTime))\n        if (updater !== this.updater) return\n      }\n\n      const animationNum = carousel === 'single' ? 1 : rowNum\n\n      let rows = rowsData.slice(animationIndex)\n      rows.push(...rowsData.slice(0, animationIndex))\n\n      this.rows = rows.slice(0, rowNum + 1)\n      this.heights = new Array(rowLength).fill(avgHeight)\n\n      await new Promise(resolve => setTimeout(resolve, 300))\n      if (updater !== this.updater) return\n\n      this.heights.splice(0, animationNum, ...new Array(animationNum).fill(0))\n\n      animationIndex += animationNum\n\n      const back = animationIndex - rowLength\n      if (back >= 0) animationIndex = back\n\n      this.animationIndex = animationIndex\n      this.animationHandler = setTimeout(animation, waitTime - 300)\n    },\n    stopAnimation () {\n      const { animationHandler, updater } = this\n\n      this.updater = (updater + 1) % 999999\n\n      if (!animationHandler) return\n\n      clearTimeout(animationHandler)\n    },\n  },\n  destroyed () {\n    const { stopAnimation } = this\n\n    stopAnimation()\n  }\n}\n</script>"],"mappings":"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","ignoreList":[]}]}