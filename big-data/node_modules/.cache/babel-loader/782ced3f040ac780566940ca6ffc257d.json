{"remainingRequest":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\thread-loader@2.1.3\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\babel-loader@8.4.1\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\@jiaminghi+data-view@2.10.0\\node_modules\\@jiaminghi\\data-view\\lib\\components\\waterLevelPond\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\@jiaminghi+data-view@2.10.0\\node_modules\\@jiaminghi\\data-view\\lib\\components\\waterLevelPond\\src\\main.vue","mtime":499162500000},{"path":"C:\\Users\\18167\\Desktop\\big-data\\babel.config.js","mtime":1725678814000},{"path":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\thread-loader@2.1.3\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\babel-loader@8.4.1\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}