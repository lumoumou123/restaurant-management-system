{"remainingRequest":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\RestaurantStatistics.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\RestaurantStatistics.vue","mtime":1743698608590},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\babel.config.js","mtime":1725678814000},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\babel-loader\\lib\\index.js","mtime":1742859682775},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js","mtime":1742859683968}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdXNlIH0gZnJvbSAnZWNoYXJ0cy9jb3JlJzsKaW1wb3J0IHsgQ2FudmFzUmVuZGVyZXIgfSBmcm9tICdlY2hhcnRzL3JlbmRlcmVycyc7CmltcG9ydCB7IEJhckNoYXJ0LCBMaW5lQ2hhcnQsIFBpZUNoYXJ0IH0gZnJvbSAnZWNoYXJ0cy9jaGFydHMnOwppbXBvcnQgeyBUaXRsZUNvbXBvbmVudCwgVG9vbHRpcENvbXBvbmVudCwgTGVnZW5kQ29tcG9uZW50LCBHcmlkQ29tcG9uZW50IH0gZnJvbSAnZWNoYXJ0cy9jb21wb25lbnRzJzsKaW1wb3J0IFZDaGFydCwgeyBUSEVNRV9LRVkgfSBmcm9tICd2dWUtZWNoYXJ0cyc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CnVzZShbQ2FudmFzUmVuZGVyZXIsIEJhckNoYXJ0LCBMaW5lQ2hhcnQsIFBpZUNoYXJ0LCBUaXRsZUNvbXBvbmVudCwgVG9vbHRpcENvbXBvbmVudCwgTGVnZW5kQ29tcG9uZW50LCBHcmlkQ29tcG9uZW50XSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUmVzdGF1cmFudFN0YXRpc3RpY3MnLAogIGNvbXBvbmVudHM6IHsKICAgIFZDaGFydAogIH0sCiAgcHJvdmlkZTogewogICAgW1RIRU1FX0tFWV06ICdsaWdodCcKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRlUmFuZ2U6IFtuZXcgRGF0ZShuZXcgRGF0ZSgpLnNldERhdGUobmV3IERhdGUoKS5nZXREYXRlKCkgLSA3KSksIG5ldyBEYXRlKCldLAogICAgICBzZWxlY3RlZFJlc3RhdXJhbnQ6IG51bGwsCiAgICAgIHJlc3RhdXJhbnRzOiBbXSwKICAgICAgc3RhdGlzdGljczogewogICAgICAgIGF2ZXJhZ2VSYXRpbmc6IDAsCiAgICAgICAgdG90YWxDb21tZW50czogMCwKICAgICAgICBtZW51SXRlbUNvdW50OiAwLAogICAgICAgIHRvdGFsVmlld3M6IDAsCiAgICAgICAgcmF0aW5nRGlzdHJpYnV0aW9uOiB7fSwKICAgICAgICB2aWV3c1RyZW5kOiBbXSwKICAgICAgICBwb3B1bGFyRGlzaGVzOiBbXSwKICAgICAgICBjb21tZW50c1RpbWVsaW5lOiBbXQogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHJhdGluZ0Rpc3RyaWJ1dGlvbkNoYXJ0KCkgewogICAgICBjb25zdCBkYXRhID0gT2JqZWN0LmVudHJpZXModGhpcy5zdGF0aXN0aWNzLnJhdGluZ0Rpc3RyaWJ1dGlvbiB8fCB7fSkubWFwKChbcmF0aW5nLCBjb3VudF0pID0+ICh7CiAgICAgICAgbmFtZTogYCR7cmF0aW5nfSBTdGFyYCwKICAgICAgICB2YWx1ZTogY291bnQKICAgICAgfSkpOwogICAgICByZXR1cm4gewogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJywKICAgICAgICAgIGZvcm1hdHRlcjogJ3tifToge2N9ICh7ZH0lKScKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgb3JpZW50OiAndmVydGljYWwnLAogICAgICAgICAgbGVmdDogJ2xlZnQnCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgIHJhZGl1czogWyc1MCUnLCAnNzAlJ10sCiAgICAgICAgICBhdm9pZExhYmVsT3ZlcmxhcDogZmFsc2UsCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBwb3NpdGlvbjogJ291dHNpZGUnCiAgICAgICAgICB9LAogICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgIGZvbnRTaXplOiAnMTYnLAogICAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgbGFiZWxMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiBkYXRhCiAgICAgICAgfV0KICAgICAgfTsKICAgIH0sCiAgICB2aWV3c1RyZW5kQ2hhcnQoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICB2aWV3c1RyZW5kID0gW10KICAgICAgfSA9IHRoaXMuc3RhdGlzdGljczsKICAgICAgcmV0dXJuIHsKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgZGF0YTogdmlld3NUcmVuZC5tYXAoaXRlbSA9PiBpdGVtLmRhdGUpCiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgZGF0YTogdmlld3NUcmVuZC5tYXAoaXRlbSA9PiBpdGVtLnZpZXdzKSwKICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgIHNtb290aDogdHJ1ZSwKICAgICAgICAgIGFyZWFTdHlsZToge30KICAgICAgICB9XQogICAgICB9OwogICAgfSwKICAgIHBvcHVsYXJEaXNoZXNDaGFydCgpIHsKICAgICAgY29uc3QgewogICAgICAgIHBvcHVsYXJEaXNoZXMgPSBbXQogICAgICB9ID0gdGhpcy5zdGF0aXN0aWNzOwogICAgICByZXR1cm4gewogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICdzaGFkb3cnCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBkYXRhOiBwb3B1bGFyRGlzaGVzLm1hcChpdGVtID0+IGl0ZW0ubmFtZSkKICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgZGF0YTogcG9wdWxhckRpc2hlcy5tYXAoaXRlbSA9PiBpdGVtLm9yZGVyQ291bnQpCiAgICAgICAgfV0KICAgICAgfTsKICAgIH0sCiAgICBjb21tZW50c1RpbWVsaW5lQ2hhcnQoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBjb21tZW50c1RpbWVsaW5lID0gW10KICAgICAgfSA9IHRoaXMuc3RhdGlzdGljczsKICAgICAgcmV0dXJuIHsKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgZGF0YTogY29tbWVudHNUaW1lbGluZS5tYXAoaXRlbSA9PiBpdGVtLmRhdGUpCiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgZGF0YTogY29tbWVudHNUaW1lbGluZS5tYXAoaXRlbSA9PiBpdGVtLmNvdW50KSwKICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgIHNtb290aDogdHJ1ZQogICAgICAgIH1dCiAgICAgIH07CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5mZXRjaFJlc3RhdXJhbnRzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBmZXRjaFJlc3RhdXJhbnRzKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvcmVzdGF1cmFudC9saXN0Jyk7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICB0aGlzLnJlc3RhdXJhbnRzID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICAgICAgaWYgKHRoaXMucmVzdGF1cmFudHMubGVuZ3RoID4gMCkgewogICAgICAgICAgICB0aGlzLnNlbGVjdGVkUmVzdGF1cmFudCA9IHRoaXMucmVzdGF1cmFudHNbMF0uaWQ7CiAgICAgICAgICAgIHRoaXMuZmV0Y2hTdGF0aXN0aWNzKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCByZXN0YXVyYW50czonLCBlcnJvcik7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcignRmFpbGVkIHRvIGxvYWQgcmVzdGF1cmFudHMnKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGZldGNoU3RhdGlzdGljcygpIHsKICAgICAgaWYgKCF0aGlzLnNlbGVjdGVkUmVzdGF1cmFudCB8fCAhdGhpcy5kYXRlUmFuZ2UpIHJldHVybjsKICAgICAgY29uc3QgW3N0YXJ0RGF0ZSwgZW5kRGF0ZV0gPSB0aGlzLmRhdGVSYW5nZTsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL3N0YXRpc3RpY3MvcmVzdGF1cmFudCcsIHsKICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICByZXN0YXVyYW50SWQ6IHRoaXMuc2VsZWN0ZWRSZXN0YXVyYW50LAogICAgICAgICAgICBzdGFydERhdGU6IHN0YXJ0RGF0ZS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF0sCiAgICAgICAgICAgIGVuZERhdGU6IGVuZERhdGUudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICB0aGlzLnN0YXRpc3RpY3MgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBzdGF0aXN0aWNzOicsIGVycm9yKTsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCdGYWlsZWQgdG8gbG9hZCBzdGF0aXN0aWNzJyk7CiAgICAgIH0KICAgIH0sCiAgICBsb2FkTW9ja0RhdGEoKSB7CiAgICAgIHRoaXMuc3RhdGlzdGljcyA9IHsKICAgICAgICBhdmVyYWdlUmF0aW5nOiA0LjQsCiAgICAgICAgdG90YWxDb21tZW50czogMCwKICAgICAgICBtZW51SXRlbUNvdW50OiAwLAogICAgICAgIHRvdGFsVmlld3M6IDQwNzksCiAgICAgICAgcmF0aW5nRGlzdHJpYnV0aW9uOiB7CiAgICAgICAgICAnMSBTdGFyJzogNSwKICAgICAgICAgICcyIFN0YXJzJzogMTAsCiAgICAgICAgICAnMyBTdGFycyc6IDIwLAogICAgICAgICAgJzQgU3RhcnMnOiA0MCwKICAgICAgICAgICc1IFN0YXJzJzogMjUKICAgICAgICB9LAogICAgICAgIHZpZXdzVHJlbmQ6IEFycmF5LmZyb20oewogICAgICAgICAgbGVuZ3RoOiA3CiAgICAgICAgfSwgKF8sIGkpID0+ICh7CiAgICAgICAgICBkYXRlOiBuZXcgRGF0ZShEYXRlLm5vdygpIC0gKDYgLSBpKSAqIDI0ICogNjAgKiA2MCAqIDEwMDApLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXSwKICAgICAgICAgIHZpZXdzOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDApICsgNTAKICAgICAgICB9KSksCiAgICAgICAgcG9wdWxhckRpc2hlczogW3sKICAgICAgICAgIG5hbWU6ICdEaXNoIDEnLAogICAgICAgICAgb3JkZXJDb3VudDogNDUKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAnRGlzaCAyJywKICAgICAgICAgIG9yZGVyQ291bnQ6IDM4CiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ0Rpc2ggMycsCiAgICAgICAgICBvcmRlckNvdW50OiAzMgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICdEaXNoIDQnLAogICAgICAgICAgb3JkZXJDb3VudDogMjUKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAnRGlzaCA1JywKICAgICAgICAgIG9yZGVyQ291bnQ6IDIwCiAgICAgICAgfV0sCiAgICAgICAgY29tbWVudHNUaW1lbGluZTogQXJyYXkuZnJvbSh7CiAgICAgICAgICBsZW5ndGg6IDcKICAgICAgICB9LCAoXywgaSkgPT4gKHsKICAgICAgICAgIGRhdGU6IG5ldyBEYXRlKERhdGUubm93KCkgLSAoNiAtIGkpICogMjQgKiA2MCAqIDYwICogMTAwMCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdLAogICAgICAgICAgY291bnQ6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKQogICAgICAgIH0pKQogICAgICB9OwogICAgfSwKICAgIGFzeW5jIHRlc3RBUEkoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9zdGF0aXN0aWNzL3Rlc3QnKTsKICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ0FQSSB0ZXN0IHN1Y2Nlc3NmdWwnKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdBUEkgdGVzdCBmYWlsZWQ6JywgZXJyb3IpOwogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ0FQSSB0ZXN0IGZhaWxlZCcpOwogICAgICB9CiAgICB9LAogICAgbG9nUmVzdGF1cmFudERldGFpbHMoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdDdXJyZW50IFN0YXRpc3RpY3M6JywgdGhpcy5zdGF0aXN0aWNzKTsKICAgICAgY29uc29sZS5sb2coJ1NlbGVjdGVkIFJlc3RhdXJhbnQ6JywgdGhpcy5zZWxlY3RlZFJlc3RhdXJhbnQpOwogICAgICBjb25zb2xlLmxvZygnRGF0ZSBSYW5nZTonLCB0aGlzLmRhdGVSYW5nZSk7CiAgICB9LAogICAgYmFja1RvSG9tZSgpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy8nKTsKICAgIH0KICB9Cn07"},{"version":3,"names":["use","CanvasRenderer","BarChart","LineChart","PieChart","TitleComponent","TooltipComponent","LegendComponent","GridComponent","VChart","THEME_KEY","axios","name","components","provide","data","dateRange","Date","setDate","getDate","selectedRestaurant","restaurants","statistics","averageRating","totalComments","menuItemCount","totalViews","ratingDistribution","viewsTrend","popularDishes","commentsTimeline","computed","ratingDistributionChart","Object","entries","map","rating","count","value","tooltip","trigger","formatter","legend","orient","left","series","type","radius","avoidLabelOverlap","label","show","position","emphasis","fontSize","fontWeight","labelLine","viewsTrendChart","xAxis","item","date","yAxis","views","smooth","areaStyle","popularDishesChart","axisPointer","orderCount","commentsTimelineChart","created","fetchRestaurants","methods","response","get","code","length","id","fetchStatistics","error","console","$message","startDate","endDate","params","restaurantId","toISOString","split","loadMockData","Array","from","_","i","now","Math","floor","random","testAPI","success","logRestaurantDetails","log","backToHome","$router","push"],"sources":["src/views/RestaurantStatistics.vue"],"sourcesContent":["<template>\r\n  <div class=\"restaurant-statistics\">\r\n    <div class=\"header\">\r\n      <h1>Restaurant Statistics Dashboard</h1>\r\n      <el-button type=\"primary\" icon=\"el-icon-back\" @click=\"backToHome\">Back to Home</el-button>\r\n    </div>\r\n\r\n    <!-- 筛选条件 -->\r\n    <div class=\"filters\">\r\n      <el-date-picker\r\n        v-model=\"dateRange\"\r\n        type=\"daterange\"\r\n        range-separator=\"to\"\r\n        start-placeholder=\"Start Date\"\r\n        end-placeholder=\"End Date\"\r\n        :default-time=\"['00:00:00', '23:59:59']\"\r\n        @change=\"fetchStatistics\"\r\n      />\r\n      \r\n      <el-select\r\n        v-model=\"selectedRestaurant\"\r\n        placeholder=\"Select Restaurant\"\r\n        @change=\"fetchStatistics\"\r\n        class=\"restaurant-select\"\r\n      >\r\n        <el-option\r\n          v-for=\"restaurant in restaurants\"\r\n          :key=\"restaurant.id\"\r\n          :label=\"restaurant.name\"\r\n          :value=\"restaurant.id\"\r\n        />\r\n      </el-select>\r\n\r\n      <div class=\"action-buttons\">\r\n        <el-button type=\"primary\" @click=\"loadMockData\">Load Mock Data</el-button>\r\n        <el-button type=\"success\" @click=\"testAPI\">Test API</el-button>\r\n        <el-button type=\"info\" @click=\"logRestaurantDetails\">Log Restaurant Details</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 主要指标卡片 -->\r\n    <div class=\"metric-cards\">\r\n      <el-card class=\"metric-card\">\r\n        <div class=\"metric-title\">Average Rating</div>\r\n        <div class=\"metric-value\">\r\n          <span class=\"number\">{{ statistics.averageRating || '0.0' }}</span>\r\n          <el-rate\r\n            v-model=\"statistics.averageRating\"\r\n            disabled\r\n            show-score\r\n            text-color=\"#ff9900\"\r\n            score-template=\"\"\r\n          />\r\n        </div>\r\n      </el-card>\r\n\r\n      <el-card class=\"metric-card\">\r\n        <div class=\"metric-title\">Comments</div>\r\n        <div class=\"metric-value\">\r\n          <span class=\"number\">{{ statistics.totalComments || 0 }}</span>\r\n        </div>\r\n      </el-card>\r\n\r\n      <el-card class=\"metric-card\">\r\n        <div class=\"metric-title\">Menu Items</div>\r\n        <div class=\"metric-value\">\r\n          <span class=\"number\">{{ statistics.menuItemCount || 0 }}</span>\r\n        </div>\r\n      </el-card>\r\n\r\n      <el-card class=\"metric-card\">\r\n        <div class=\"metric-title\">Total Views</div>\r\n        <div class=\"metric-value\">\r\n          <span class=\"number\">{{ statistics.totalViews || 0 }}</span>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 图表区域 -->\r\n    <div class=\"charts-container\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"12\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">Rating Distribution</div>\r\n            <div class=\"chart-container\">\r\n              <v-chart :option=\"ratingDistributionChart\" autoresize />\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        \r\n        <el-col :span=\"12\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">Views Trend</div>\r\n            <div class=\"chart-container\">\r\n              <v-chart :option=\"viewsTrendChart\" autoresize />\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        \r\n        <el-col :span=\"12\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">Popular Dishes</div>\r\n            <div class=\"chart-container\">\r\n              <v-chart :option=\"popularDishesChart\" autoresize />\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        \r\n        <el-col :span=\"12\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">Comments Timeline</div>\r\n            <div class=\"chart-container\">\r\n              <v-chart :option=\"commentsTimelineChart\" autoresize />\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { use } from 'echarts/core';\r\nimport { CanvasRenderer } from 'echarts/renderers';\r\nimport { BarChart, LineChart, PieChart } from 'echarts/charts';\r\nimport {\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  LegendComponent,\r\n  GridComponent\r\n} from 'echarts/components';\r\nimport VChart, { THEME_KEY } from 'vue-echarts';\r\nimport axios from 'axios';\r\n\r\nuse([\r\n  CanvasRenderer,\r\n  BarChart,\r\n  LineChart,\r\n  PieChart,\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  LegendComponent,\r\n  GridComponent\r\n]);\r\n\r\nexport default {\r\n  name: 'RestaurantStatistics',\r\n  components: {\r\n    VChart\r\n  },\r\n  provide: {\r\n    [THEME_KEY]: 'light'\r\n  },\r\n  data() {\r\n    return {\r\n      dateRange: [\r\n        new Date(new Date().setDate(new Date().getDate() - 7)),\r\n        new Date()\r\n      ],\r\n      selectedRestaurant: null,\r\n      restaurants: [],\r\n      statistics: {\r\n        averageRating: 0,\r\n        totalComments: 0,\r\n        menuItemCount: 0,\r\n        totalViews: 0,\r\n        ratingDistribution: {},\r\n        viewsTrend: [],\r\n        popularDishes: [],\r\n        commentsTimeline: []\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    ratingDistributionChart() {\r\n      const data = Object.entries(this.statistics.ratingDistribution || {}).map(\r\n        ([rating, count]) => ({\r\n          name: `${rating} Star`,\r\n          value: count\r\n        })\r\n      );\r\n\r\n      return {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{b}: {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: ['50%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            label: {\r\n              show: true,\r\n              position: 'outside'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '16',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: true\r\n            },\r\n            data: data\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    viewsTrendChart() {\r\n      const { viewsTrend = [] } = this.statistics;\r\n      return {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: viewsTrend.map(item => item.date)\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            data: viewsTrend.map(item => item.views),\r\n            type: 'line',\r\n            smooth: true,\r\n            areaStyle: {}\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    popularDishesChart() {\r\n      const { popularDishes = [] } = this.statistics;\r\n      return {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'value'\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: popularDishes.map(item => item.name)\r\n        },\r\n        series: [\r\n          {\r\n            type: 'bar',\r\n            data: popularDishes.map(item => item.orderCount)\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    commentsTimelineChart() {\r\n      const { commentsTimeline = [] } = this.statistics;\r\n      return {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: commentsTimeline.map(item => item.date)\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            data: commentsTimeline.map(item => item.count),\r\n            type: 'line',\r\n            smooth: true\r\n          }\r\n        ]\r\n      };\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchRestaurants();\r\n  },\r\n  methods: {\r\n    async fetchRestaurants() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/restaurant/list');\r\n        if (response.data.code === 200) {\r\n          this.restaurants = response.data.data;\r\n          if (this.restaurants.length > 0) {\r\n            this.selectedRestaurant = this.restaurants[0].id;\r\n            this.fetchStatistics();\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch restaurants:', error);\r\n        this.$message.error('Failed to load restaurants');\r\n      }\r\n    },\r\n    async fetchStatistics() {\r\n      if (!this.selectedRestaurant || !this.dateRange) return;\r\n\r\n      const [startDate, endDate] = this.dateRange;\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/statistics/restaurant', {\r\n          params: {\r\n            restaurantId: this.selectedRestaurant,\r\n            startDate: startDate.toISOString().split('T')[0],\r\n            endDate: endDate.toISOString().split('T')[0]\r\n          }\r\n        });\r\n\r\n        if (response.data.code === 200) {\r\n          this.statistics = response.data.data;\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch statistics:', error);\r\n        this.$message.error('Failed to load statistics');\r\n      }\r\n    },\r\n    loadMockData() {\r\n      this.statistics = {\r\n        averageRating: 4.4,\r\n        totalComments: 0,\r\n        menuItemCount: 0,\r\n        totalViews: 4079,\r\n        ratingDistribution: {\r\n          '1 Star': 5,\r\n          '2 Stars': 10,\r\n          '3 Stars': 20,\r\n          '4 Stars': 40,\r\n          '5 Stars': 25\r\n        },\r\n        viewsTrend: Array.from({ length: 7 }, (_, i) => ({\r\n          date: new Date(Date.now() - (6 - i) * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n          views: Math.floor(Math.random() * 100) + 50\r\n        })),\r\n        popularDishes: [\r\n          { name: 'Dish 1', orderCount: 45 },\r\n          { name: 'Dish 2', orderCount: 38 },\r\n          { name: 'Dish 3', orderCount: 32 },\r\n          { name: 'Dish 4', orderCount: 25 },\r\n          { name: 'Dish 5', orderCount: 20 }\r\n        ],\r\n        commentsTimeline: Array.from({ length: 7 }, (_, i) => ({\r\n          date: new Date(Date.now() - (6 - i) * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n          count: Math.floor(Math.random() * 10)\r\n        }))\r\n      };\r\n    },\r\n    async testAPI() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/statistics/test');\r\n        this.$message.success('API test successful');\r\n      } catch (error) {\r\n        console.error('API test failed:', error);\r\n        this.$message.error('API test failed');\r\n      }\r\n    },\r\n    logRestaurantDetails() {\r\n      console.log('Current Statistics:', this.statistics);\r\n      console.log('Selected Restaurant:', this.selectedRestaurant);\r\n      console.log('Date Range:', this.dateRange);\r\n    },\r\n    backToHome() {\r\n      this.$router.push('/');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.restaurant-statistics {\r\n  padding: 20px;\r\n  background-color: #f5f7fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.header h1 {\r\n  margin: 0;\r\n  color: #303133;\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.restaurant-select {\r\n  min-width: 200px;\r\n}\r\n\r\n.action-buttons {\r\n  margin-left: auto;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.metric-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.metric-card {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.metric-title {\r\n  color: #909399;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.metric-value {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.metric-value .number {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.charts-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-container {\r\n  height: 300px;\r\n  width: 100%;\r\n}\r\n\r\n:deep(.el-card__header) {\r\n  padding: 15px 20px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n:deep(.el-date-editor.el-input),\r\n:deep(.el-date-editor.el-input__inner) {\r\n  width: 320px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]}]}