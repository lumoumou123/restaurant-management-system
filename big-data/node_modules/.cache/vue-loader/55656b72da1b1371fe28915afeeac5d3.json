{"remainingRequest":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\Menu.vue?vue&type=style&index=0&id=7b8b0119&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\Menu.vue","mtime":1742915659565},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\css-loader\\dist\\cjs.js","mtime":1742859681121},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1742859685007},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\postcss-loader\\src\\index.js","mtime":1742859682771},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js","mtime":1742859683968}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubWVudS1tYW5hZ2VtZW50IHsNCiAgcGFkZGluZzogMjBweDsNCiAgbWF4LXdpZHRoOiAxMjAwcHg7DQogIG1hcmdpbjogMCBhdXRvOw0KfQ0KDQpoMiwgaDMgew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KICBjb2xvcjogIzMzMzsNCn0NCg0KLnJlc3RhdXJhbnQtc2VsZWN0b3Igew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0KDQoubWVudS1jb250ZW50IHsNCiAgZGlzcGxheTogZ3JpZDsNCiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyOw0KICBnYXA6IDMwcHg7DQogIG1hcmdpbi1ib3R0b206IDMwcHg7DQp9DQoNCi5tZW51LWZvcm0gew0KICBiYWNrZ3JvdW5kOiAjZjlmOWY5Ow0KICBwYWRkaW5nOiAyMHB4Ow0KICBib3JkZXItcmFkaXVzOiA4cHg7DQp9DQoNCi5tZW51LWxpc3Qgew0KICBiYWNrZ3JvdW5kOiAjZmZmOw0KICBwYWRkaW5nOiAyMHB4Ow0KICBib3JkZXItcmFkaXVzOiA4cHg7DQogIGJvcmRlcjogMXB4IHNvbGlkICNlZWU7DQp9DQoNCi5jYXRlZ29yeS1maWx0ZXJzIHsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCg0KLm5vLWl0ZW1zLCAubm8tcmVzdGF1cmFudC1zZWxlY3RlZCB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgY29sb3I6ICM5OTk7DQogIHBhZGRpbmc6IDMwcHggMDsNCn0NCg0KLmRlc2NyaXB0aW9uLXRleHQgew0KICBkaXNwbGF5OiBibG9jazsNCiAgbWF4LWhlaWdodDogODBweDsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7DQogIGNvbG9yOiAjNjY2Ow0KICBmb250LXNpemU6IDE0cHg7DQp9DQoNCi5hY3Rpb25zLWJhciB7DQogIG1hcmdpbi10b3A6IDIwcHg7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCg0KLyog5LiN5Y+v55So6I+c5Y2V6aG555qE5qC35byPICovDQoudW5hdmFpbGFibGUtaXRlbSB7DQogIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7DQogIGNvbG9yOiAjOTk5Ow0KfQ0KDQpAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHsNCiAgLm1lbnUtY29udGVudCB7DQogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7DQogIH0NCn0NCg=="},{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";AAuVA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Menu.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"menu-management\">\r\n    <h2>Restaurant Menu Management</h2>\r\n    \r\n    <div class=\"restaurant-selector\">\r\n      <el-select \r\n        v-model=\"selectedRestaurantId\" \r\n        placeholder=\"Select a restaurant\" \r\n        @change=\"loadMenu\"\r\n        style=\"width: 100%;\"\r\n      >\r\n        <el-option \r\n          v-for=\"restaurant in restaurants\" \r\n          :key=\"restaurant.id\" \r\n          :label=\"restaurant.name\" \r\n          :value=\"restaurant.id\"\r\n        ></el-option>\r\n      </el-select>\r\n    </div>\r\n    \r\n    <div v-if=\"selectedRestaurantId\" class=\"menu-content\">\r\n      <!-- Menu Item Form -->\r\n      <div class=\"menu-form\">\r\n        <h3>{{ editMode ? 'Edit Menu Item' : 'Add New Menu Item' }}</h3>\r\n        <el-form :model=\"menuItemForm\" label-width=\"120px\">\r\n          <el-form-item label=\"Name\" required>\r\n            <el-input v-model=\"menuItemForm.name\" placeholder=\"Item Name\"></el-input>\r\n          </el-form-item>\r\n          \r\n          <el-form-item label=\"Description\">\r\n            <el-input \r\n              v-model=\"menuItemForm.description\" \r\n              type=\"textarea\" \r\n              :rows=\"3\" \r\n              placeholder=\"Item Description\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          \r\n          <el-form-item label=\"Price\" required>\r\n            <el-input-number \r\n              v-model=\"menuItemForm.price\" \r\n              :precision=\"2\" \r\n              :step=\"0.5\" \r\n              :min=\"0\"\r\n              style=\"width: 200px;\"\r\n            ></el-input-number>\r\n          </el-form-item>\r\n          \r\n          <el-form-item label=\"Category\">\r\n            <el-select v-model=\"menuItemForm.category\" placeholder=\"Select Category\">\r\n              <el-option label=\"Appetizer\" value=\"Appetizer\"></el-option>\r\n              <el-option label=\"Main Course\" value=\"Main Course\"></el-option>\r\n              <el-option label=\"Dessert\" value=\"Dessert\"></el-option>\r\n              <el-option label=\"Beverage\" value=\"Beverage\"></el-option>\r\n              <el-option label=\"Special\" value=\"Special\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          \r\n          <el-form-item label=\"Image URL\">\r\n            <el-input v-model=\"menuItemForm.image\" placeholder=\"Item Image URL\"></el-input>\r\n          </el-form-item>\r\n          \r\n          <el-form-item label=\"Available\">\r\n            <el-switch v-model=\"menuItemForm.isAvailable\"></el-switch>\r\n          </el-form-item>\r\n          \r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"saveMenuItem\">Save</el-button>\r\n            <el-button @click=\"resetForm\">Reset</el-button>\r\n            <el-button v-if=\"editMode\" @click=\"cancelEdit\">Cancel</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      \r\n      <!-- Menu Items List -->\r\n      <div class=\"menu-list\">\r\n        <h3>Menu Items</h3>\r\n        \r\n        <div class=\"category-filters\">\r\n          <el-radio-group v-model=\"categoryFilter\" @change=\"filterByCategory\">\r\n            <el-radio-button label=\"\">All</el-radio-button>\r\n            <el-radio-button \r\n              v-for=\"category in availableCategories\" \r\n              :key=\"category\" \r\n              :label=\"category\"\r\n            >{{ category }}</el-radio-button>\r\n          </el-radio-group>\r\n        </div>\r\n        \r\n        <div v-if=\"filteredMenuItems.length === 0\" class=\"no-items\">\r\n          <p>No menu items found. Add your first item above!</p>\r\n        </div>\r\n        \r\n        <el-table \r\n          v-else \r\n          :data=\"filteredMenuItems\" \r\n          style=\"width: 100%\"\r\n          :row-class-name=\"getRowClassName\"\r\n        >\r\n          <el-table-column prop=\"name\" label=\"Name\" min-width=\"150\"></el-table-column>\r\n          <el-table-column prop=\"description\" label=\"Description\" min-width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              <span class=\"description-text\">{{ scope.row.description || 'No description' }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"price\" label=\"Price\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              €{{ scope.row.price.toFixed(2) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"category\" label=\"Category\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"isAvailable\" label=\"Available\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag :type=\"scope.row.isAvailable ? 'success' : 'danger'\">\r\n                {{ scope.row.isAvailable ? 'Yes' : 'No' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"Actions\" width=\"150\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button size=\"mini\" @click=\"editMenuItem(scope.row)\">Edit</el-button>\r\n              <el-button size=\"mini\" type=\"danger\" @click=\"deleteMenuItem(scope.row)\">Delete</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-else class=\"no-restaurant-selected\">\r\n      <p>Please select a restaurant to manage its menu</p>\r\n    </div>\r\n    \r\n    <div class=\"actions-bar\">\r\n      <el-button type=\"warning\" @click=\"goBack\">Back to Restaurant Management</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'Menu',\r\n  data() {\r\n    return {\r\n      restaurants: [],\r\n      menuItems: [],\r\n      filteredMenuItems: [],\r\n      selectedRestaurantId: null,\r\n      categoryFilter: '',\r\n      editMode: false,\r\n      menuItemForm: {\r\n        id: null,\r\n        restaurantId: null,\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        category: '',\r\n        image: '',\r\n        isAvailable: true\r\n      },\r\n      userRole: '',\r\n      userId: null\r\n    };\r\n  },\r\n  computed: {\r\n    availableCategories() {\r\n      // 提取所有不重复的分类\r\n      const categories = this.menuItems\r\n        .map(item => item.category)\r\n        .filter(category => category); // 过滤掉空值\r\n      \r\n      // 返回去重后的分类\r\n      return [...new Set(categories)];\r\n    }\r\n  },\r\n  created() {\r\n    // 获取用户信息\r\n    this.userRole = localStorage.getItem('userRole');\r\n    this.userId = localStorage.getItem('userId');\r\n    \r\n    // 加载餐厅列表\r\n    this.loadRestaurants();\r\n  },\r\n  methods: {\r\n    async loadRestaurants() {\r\n      try {\r\n        let response;\r\n        \r\n        if (this.userRole === 'Manager') {\r\n          // 管理员可以看到所有餐厅\r\n          response = await axios.get('http://localhost:8080/list');\r\n        } else if (this.userRole === 'Owner') {\r\n          // 业主只能看到自己的餐厅\r\n          response = await axios.get(`http://localhost:8080/owner/${this.userId}`);\r\n        }\r\n        \r\n        if (response && response.data.code === 200) {\r\n          this.restaurants = response.data.data;\r\n          \r\n          // 如果只有一个餐厅，自动选择它\r\n          if (this.restaurants.length === 1) {\r\n            this.selectedRestaurantId = this.restaurants[0].id;\r\n            this.loadMenu();\r\n          }\r\n        } else {\r\n          this.$message.error('Failed to load restaurants');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading restaurants:', error);\r\n        this.$message.error('Error loading restaurants');\r\n      }\r\n    },\r\n    \r\n    async loadMenu() {\r\n      if (!this.selectedRestaurantId) return;\r\n      \r\n      try {\r\n        this.menuItemForm.restaurantId = this.selectedRestaurantId;\r\n        \r\n        const response = await axios.get(`http://localhost:8080/menu/restaurant/${this.selectedRestaurantId}`);\r\n        \r\n        if (response.data.code === 200) {\r\n          this.menuItems = response.data.data;\r\n          this.filterByCategory();\r\n        } else {\r\n          this.$message.error(response.data.msg || 'Failed to load menu items');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading menu:', error);\r\n        this.$message.error('Error loading menu items');\r\n      }\r\n    },\r\n    \r\n    filterByCategory() {\r\n      if (!this.categoryFilter) {\r\n        this.filteredMenuItems = this.menuItems;\r\n      } else {\r\n        this.filteredMenuItems = this.menuItems.filter(item => \r\n          item.category === this.categoryFilter\r\n        );\r\n      }\r\n    },\r\n    \r\n    async saveMenuItem() {\r\n      // 验证必填字段\r\n      if (!this.menuItemForm.name || this.menuItemForm.price === null) {\r\n        this.$message.error('Please fill in item name and price');\r\n        return;\r\n      }\r\n      \r\n      // 确保餐厅ID已设置\r\n      this.menuItemForm.restaurantId = this.selectedRestaurantId;\r\n      \r\n      try {\r\n        let url = 'http://localhost:8080/menu/add';\r\n        let method = 'post';\r\n        \r\n        // 如果是编辑，使用更新接口\r\n        if (this.editMode) {\r\n          url = 'http://localhost:8080/menu/update';\r\n        }\r\n        \r\n        const response = await axios({\r\n          method,\r\n          url,\r\n          data: this.menuItemForm\r\n        });\r\n        \r\n        if (response.data.code === 200) {\r\n          this.$message.success(this.editMode ? 'Menu item updated successfully' : 'Menu item added successfully');\r\n          this.resetForm();\r\n          this.loadMenu(); // 重新加载菜单\r\n        } else {\r\n          this.$message.error(response.data.msg || 'Operation failed');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error saving menu item:', error);\r\n        this.$message.error('Error saving menu item');\r\n      }\r\n    },\r\n    \r\n    editMenuItem(menuItem) {\r\n      this.editMode = true;\r\n      this.menuItemForm = { ...menuItem };\r\n      \r\n      // 滚动到表单区域\r\n      this.$nextTick(() => {\r\n        const formElement = document.querySelector('.menu-form');\r\n        if (formElement) {\r\n          formElement.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n      });\r\n    },\r\n    \r\n    async deleteMenuItem(menuItem) {\r\n      try {\r\n        if (confirm('Are you sure you want to delete this menu item?')) {\r\n          const response = await axios.delete(`http://localhost:8080/menu/delete/${menuItem.id}`);\r\n          \r\n          if (response.data.code === 200) {\r\n            this.$message.success('Menu item deleted successfully');\r\n            this.loadMenu(); // 重新加载菜单\r\n          } else {\r\n            this.$message.error(response.data.msg || 'Failed to delete menu item');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error deleting menu item:', error);\r\n        this.$message.error('Error deleting menu item');\r\n      }\r\n    },\r\n    \r\n    resetForm() {\r\n      this.menuItemForm = {\r\n        id: null,\r\n        restaurantId: this.selectedRestaurantId,\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        category: '',\r\n        image: '',\r\n        isAvailable: true\r\n      };\r\n      this.editMode = false;\r\n    },\r\n    \r\n    cancelEdit() {\r\n      this.resetForm();\r\n    },\r\n    \r\n    goBack() {\r\n      this.$router.push('/restaurant-management');\r\n    },\r\n    \r\n    getRowClassName({row}) {\r\n      return row.isAvailable ? '' : 'unavailable-item';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.menu-management {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh2, h3 {\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n}\r\n\r\n.restaurant-selector {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.menu-content {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 30px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.menu-form {\r\n  background: #f9f9f9;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.menu-list {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  border: 1px solid #eee;\r\n}\r\n\r\n.category-filters {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.no-items, .no-restaurant-selected {\r\n  text-align: center;\r\n  color: #999;\r\n  padding: 30px 0;\r\n}\r\n\r\n.description-text {\r\n  display: block;\r\n  max-height: 80px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.actions-bar {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n/* 不可用菜单项的样式 */\r\n.unavailable-item {\r\n  background-color: #f9f9f9;\r\n  color: #999;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .menu-content {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style> "]}]}