{"remainingRequest":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\RestaurantManagement.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\RestaurantManagement.vue","mtime":1742915780689},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\babel-loader\\lib\\index.js","mtime":1742859682775},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js","mtime":1742859683968}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RestaurantManagement.vue"],"names":[],"mappings":";AAgfile":"RestaurantManagement.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"restaurant-management\">\n    <h2>Restaurant Management</h2>\n    \n    <!-- Restaurant Form -->\n    <div class=\"restaurant-form\">\n      <h3>{{ editMode ? 'Edit Restaurant' : 'Add New Restaurant' }}</h3>\n      <el-form :model=\"restaurantForm\" label-width=\"120px\">\n        <el-form-item label=\"Name\" required>\n          <el-input v-model=\"restaurantForm.name\" placeholder=\"Restaurant Name\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"Address\" required>\n          <el-input v-model=\"restaurantForm.address\" placeholder=\"Restaurant Address\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"Business Hours\">\n          <el-input v-model=\"restaurantForm.businessHours\" placeholder=\"e.g. 9:00-22:00\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"Cuisine Type\">\n          <el-select v-model=\"restaurantForm.style\" placeholder=\"Select Cuisine Type\">\n            <el-option label=\"Chinese\" value=\"中餐\"></el-option>\n            <el-option label=\"Western\" value=\"西餐\"></el-option>\n            <el-option label=\"Japanese\" value=\"日料\"></el-option>\n            <el-option label=\"Home Style\" value=\"家常菜\"></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"Price Range\">\n          <el-select v-model=\"restaurantForm.price\" placeholder=\"Select Price Range\">\n            <el-option label=\"Low\" value=\"低\"></el-option>\n            <el-option label=\"Medium\" value=\"中\"></el-option>\n            <el-option label=\"High\" value=\"高\"></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"Image URL\">\n          <el-input v-model=\"restaurantForm.image\" placeholder=\"Restaurant Image URL\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"Location\">\n          <div class=\"location-inputs\">\n            <el-input v-model=\"restaurantForm.lat\" placeholder=\"Latitude\" class=\"location-input\"></el-input>\n            <el-input v-model=\"restaurantForm.lng\" placeholder=\"Longitude\" class=\"location-input\"></el-input>\n          </div>\n          <div class=\"map-tip\">Tip: You can pick a location on the map to set coordinates</div>\n          \n          <!-- 地图选点组件 -->\n          <div class=\"map-container\">\n            <div id=\"location-picker-map\" style=\"height: 300px; width: 100%; margin-top: 10px;\"></div>\n            <div v-if=\"mapError\" class=\"map-error\">{{ mapError }}</div>\n          </div>\n        </el-form-item>\n        \n        <!-- Owner Selection (Only for Manager) -->\n        <el-form-item v-if=\"userRole === 'Manager'\" label=\"Owner\">\n          <el-select \n            v-model=\"restaurantForm.ownerId\" \n            placeholder=\"Select Restaurant Owner\"\n            filterable\n            :disabled=\"!isNewRestaurant\"\n          >\n            <el-option\n              v-for=\"owner in owners\"\n              :key=\"owner.id\"\n              :label=\"owner.username\"\n              :value=\"owner.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"saveRestaurant\">Save</el-button>\n          <el-button @click=\"resetForm\">Reset</el-button>\n          <el-button v-if=\"editMode\" @click=\"cancelEdit\">Cancel</el-button>\n          <el-button type=\"warning\" @click=\"goBack\">Back to Home</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    \n    <!-- Restaurant List -->\n    <div class=\"restaurant-list\">\n      <h3>Your Restaurants</h3>\n      <el-table :data=\"restaurants\" style=\"width: 100%\">\n        <el-table-column prop=\"name\" label=\"Name\"></el-table-column>\n        <el-table-column prop=\"address\" label=\"Address\"></el-table-column>\n        <el-table-column prop=\"style\" label=\"Cuisine Type\"></el-table-column>\n        <el-table-column prop=\"price\" label=\"Price Range\"></el-table-column>\n        <el-table-column prop=\"score\" label=\"Rating\"></el-table-column>\n        <el-table-column label=\"Actions\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\" @click=\"editRestaurant(scope.row)\">Edit</el-button>\n            <el-button \n              size=\"mini\" \n              type=\"danger\" \n              @click=\"deleteRestaurant(scope.row)\"\n              v-if=\"userRole === 'Manager'\"\n            >Delete</el-button>\n            <el-button \n              size=\"mini\" \n              type=\"success\" \n              @click=\"manageMenu(scope.row)\"\n            >Menu</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'RestaurantManagement',\n  data() {\n    return {\n      restaurants: [],\n      owners: [],\n      restaurantForm: {\n        id: null,\n        name: '',\n        address: '',\n        businessHours: '',\n        style: '',\n        price: '',\n        score: '0',\n        image: '',\n        lat: '',\n        lng: '',\n        ownerId: null\n      },\n      editMode: false,\n      isNewRestaurant: true,\n      userRole: '',\n      userId: null,\n      map: null,\n      marker: null,\n      mapError: null,\n      addressLookupTimeout: null\n    };\n  },\n  created() {\n    // Get user info from localStorage\n    this.userRole = localStorage.getItem('userRole');\n    this.userId = localStorage.getItem('userId');\n    \n    // Load restaurants based on role\n    this.loadRestaurants();\n    \n    // If manager, load owners for selection\n    if (this.userRole === 'Manager') {\n      this.loadOwners();\n    } else if (this.userRole === 'Owner') {\n      // If owner, set ownerId to current user\n      this.restaurantForm.ownerId = this.userId;\n    }\n  },\n  mounted() {\n    // 初始化地图选点器\n    this.initializeLocationPicker();\n    \n    // 当地址改变时，尝试自动定位\n    this.$watch('restaurantForm.address', (newValue) => {\n      if (newValue && newValue.length > 5) {\n        // 使用防抖，避免频繁请求\n        clearTimeout(this.addressLookupTimeout);\n        this.addressLookupTimeout = setTimeout(() => {\n          this.geocodeAddress(newValue);\n        }, 1000);\n      }\n    });\n  },\n  methods: {\n    async loadRestaurants() {\n      try {\n        let response;\n        \n        if (this.userRole === 'Manager') {\n          // Managers can see all restaurants\n          response = await axios.get('http://localhost:8080/list');\n        } else if (this.userRole === 'Owner') {\n          // Owners can only see their own restaurants\n          response = await axios.get(`http://localhost:8080/owner/${this.userId}`);\n        }\n        \n        if (response.data.code === 200) {\n          this.restaurants = response.data.data;\n        } else {\n          this.$message.error('Failed to load restaurants');\n        }\n      } catch (error) {\n        console.error('Error loading restaurants:', error);\n        this.$message.error('Error loading restaurants');\n      }\n    },\n    \n    async loadOwners() {\n      try {\n        console.log(\"开始加载餐厅业主列表...\");\n        // 先测试API是否可用\n        const testResponse = await axios.get('http://localhost:8080/api/users/test');\n        console.log(\"API测试结果:\", testResponse.data);\n        \n        // 获取角色为 'Owner' 的用户\n        const response = await axios.get('http://localhost:8080/api/users/owners');\n        console.log(\"业主列表响应:\", response.data);\n        \n        if (response.data.code === 200) {\n          this.owners = response.data.data || [];\n          console.log(\"成功加载业主:\", this.owners);\n        } else {\n          this.$message.error('Failed to load restaurant owners: ' + response.data.msg);\n          console.error(\"加载业主失败:\", response.data.msg);\n        }\n      } catch (error) {\n        console.error(\"错误详情:\", error);\n        console.error(\"请求URL:\", error.config ? error.config.url : \"未知\");\n        console.error(\"响应状态:\", error.response ? error.response.status : \"未知\");\n        console.error(\"响应数据:\", error.response ? error.response.data : \"未知\");\n        \n        // 设置一个默认业主选项以避免页面错误\n        this.owners = [{ id: 7, username: \"默认业主 (ID: 7)\" }];\n        this.$message.error('Failed to load restaurant owners: ' + (error.message || 'Unknown error'));\n      }\n    },\n    \n    async saveRestaurant() {\n      // 验证必填字段\n      if (!this.restaurantForm.name || !this.restaurantForm.address) {\n        this.$message.error('Please fill in restaurant name and address');\n        return;\n      }\n      \n      // 确保ownerId是数字类型\n      if (this.restaurantForm.ownerId) {\n        this.restaurantForm.ownerId = Number(this.restaurantForm.ownerId);\n      } else if (this.userRole === 'Owner') {\n        // 如果是业主用户，将ownerId设置为当前用户ID\n        this.restaurantForm.ownerId = Number(this.userId);\n      } else {\n        // 如果是管理员但没有选择业主，使用默认业主ID\n        this.restaurantForm.ownerId = 7;\n      }\n      \n      // 准备要发送的数据\n      let restaurantData = {...this.restaurantForm};\n      \n      // 如果是新增餐厅，删除id字段，让数据库自动生成\n      if (!this.editMode) {\n        delete restaurantData.id;\n      }\n      \n      console.log(\"准备保存餐厅数据:\", restaurantData);\n      \n      try {\n        let url = 'http://localhost:8080/add';\n        let method = 'post';\n        \n        // 如果编辑，使用update接口\n        if (this.editMode) {\n          url = 'http://localhost:8080/update';\n        }\n        \n        console.log(\"发送请求到:\", url);\n        const response = await axios({\n          method,\n          url,\n          data: restaurantData\n        });\n        \n        console.log(\"保存餐厅响应:\", response.data);\n        \n        if (response.data.code === 200) {\n          this.$message.success(this.editMode ? 'Restaurant updated successfully' : 'Restaurant added successfully');\n          this.resetForm();\n          this.loadRestaurants();\n        } else {\n          this.$message.error(response.data.msg || 'Operation failed');\n          console.error(\"操作失败:\", response.data.msg);\n        }\n      } catch (error) {\n        console.error('Error saving restaurant:', error);\n        console.error(\"请求失败详情:\", error.response ? error.response.data : error.message);\n        this.$message.error('Error saving restaurant: ' + (error.response?.data?.msg || error.message));\n      }\n    },\n    \n    editRestaurant(restaurant) {\n      this.editMode = true;\n      this.isNewRestaurant = false;\n      \n      // Copy the restaurant data to the form\n      this.restaurantForm = { ...restaurant };\n      \n      // Scroll to form\n      this.$nextTick(() => {\n        const formElement = document.querySelector('.restaurant-form');\n        if (formElement) {\n          formElement.scrollIntoView({ behavior: 'smooth' });\n        }\n      });\n    },\n    \n    async deleteRestaurant(restaurant) {\n      try {\n        if (confirm('Are you sure you want to delete this restaurant?')) {\n          const response = await axios.delete(`http://localhost:8080/delete/${restaurant.id}`);\n          \n          if (response.data.code === 200) {\n            this.$message.success('Restaurant deleted successfully');\n            this.loadRestaurants();\n          } else {\n            this.$message.error(response.data.msg || 'Failed to delete restaurant');\n          }\n        }\n      } catch (error) {\n        console.error('Error deleting restaurant:', error);\n        this.$message.error('Error deleting restaurant');\n      }\n    },\n    \n    resetForm() {\n      this.restaurantForm = {\n        id: null,\n        name: '',\n        address: '',\n        businessHours: '',\n        style: '',\n        price: '',\n        score: '0',\n        image: '',\n        lat: '',\n        lng: '',\n        ownerId: this.userRole === 'Owner' ? this.userId : null\n      };\n      this.editMode = false;\n      this.isNewRestaurant = true;\n    },\n    \n    cancelEdit() {\n      this.resetForm();\n    },\n    \n    goBack() {\n      this.$router.push('/');\n    },\n    \n    initializeLocationPicker() {\n      // 检查Google Maps API是否已加载\n      if (window.google && window.google.maps) {\n        this.initMap();\n      } else {\n        // 如果Google Maps API尚未加载，添加错误消息\n        this.mapError = 'Loading Google Maps...';\n        console.log('Google Maps API not loaded, attempting to load');\n        \n        // 尝试通过动态添加脚本加载\n        const script = document.createElement('script');\n        script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCeHfDa_fBN2NJ7Tj68zI8XjJGMw_K5d18&callback=initLocationPickerMap';\n        script.async = true;\n        script.defer = true;\n        \n        // 全局回调函数\n        window.initLocationPickerMap = () => {\n          this.initMap();\n        };\n        \n        document.head.appendChild(script);\n      }\n    },\n    \n    initMap() {\n      const mapContainer = document.getElementById(\"location-picker-map\");\n      if (!mapContainer) {\n        this.mapError = 'Map container not found';\n        console.error(\"Map container not found!\");\n        return;\n      }\n\n      try {\n        // 默认中心位置 - 爱尔兰中心\n        const center = { lat: 53.41291, lng: -8.24389 };\n        \n        // 如果表单中已有经纬度，使用表单中的值\n        if (this.restaurantForm.lat && this.restaurantForm.lng) {\n          center.lat = parseFloat(this.restaurantForm.lat);\n          center.lng = parseFloat(this.restaurantForm.lng);\n        }\n        \n        this.map = new google.maps.Map(mapContainer, {\n          center: center,\n          zoom: 7\n        });\n\n        // 如果表单中已有经纬度，添加标记\n        if (this.restaurantForm.lat && this.restaurantForm.lng) {\n          this.addMarker(center);\n        }\n\n        // 添加地图点击事件\n        this.map.addListener('click', (event) => {\n          const position = {\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n          };\n          \n          // 更新表单中的经纬度\n          this.restaurantForm.lat = position.lat.toFixed(6);\n          this.restaurantForm.lng = position.lng.toFixed(6);\n          \n          // 添加或更新标记\n          this.addMarker(position);\n          \n          // 尝试反向地理编码获取地址\n          this.reverseGeocode(position);\n        });\n        \n        this.mapError = null;\n      } catch (error) {\n        this.mapError = 'Map initialization failed: ' + error.message;\n        console.error('Map initialization error:', error);\n      }\n    },\n    \n    addMarker(position) {\n      // 如果已有标记，先移除\n      if (this.marker) {\n        this.marker.setMap(null);\n      }\n      \n      // 创建新标记\n      this.marker = new google.maps.Marker({\n        position: position,\n        map: this.map,\n        draggable: true,\n        animation: google.maps.Animation.DROP\n      });\n      \n      // 添加拖拽事件\n      this.marker.addListener('dragend', (event) => {\n        const position = {\n          lat: event.latLng.lat(),\n          lng: event.latLng.lng()\n        };\n        \n        // 更新表单中的经纬度\n        this.restaurantForm.lat = position.lat.toFixed(6);\n        this.restaurantForm.lng = position.lng.toFixed(6);\n        \n        // 尝试反向地理编码获取地址\n        this.reverseGeocode(position);\n      });\n    },\n    \n    reverseGeocode(position) {\n      // 仅当表单地址为空或地图直接点击操作时才尝试反向地理编码\n      if (!this.restaurantForm.address || this.restaurantForm.address.trim() === '') {\n        const geocoder = new google.maps.Geocoder();\n        geocoder.geocode({ location: position }, (results, status) => {\n          if (status === 'OK' && results[0]) {\n            this.restaurantForm.address = results[0].formatted_address;\n          }\n        });\n      }\n    },\n    \n    geocodeAddress(address) {\n      if (window.google && window.google.maps) {\n        const geocoder = new google.maps.Geocoder();\n        geocoder.geocode({ address: address }, (results, status) => {\n          if (status === 'OK' && results[0]) {\n            const position = {\n              lat: results[0].geometry.location.lat(),\n              lng: results[0].geometry.location.lng()\n            };\n            \n            // 更新表单中的经纬度\n            this.restaurantForm.lat = position.lat.toFixed(6);\n            this.restaurantForm.lng = position.lng.toFixed(6);\n            \n            // 添加或更新标记并移动地图\n            this.addMarker(position);\n            this.map.setCenter(position);\n            this.map.setZoom(15);\n          }\n        });\n      }\n    },\n    \n    manageMenu(restaurant) {\n      // 先保存当前选中的餐厅ID到本地存储\n      localStorage.setItem('selectedRestaurantId', restaurant.id);\n      // 导航到菜单管理页面\n      this.$router.push('/menu-management');\n    },\n  }\n};\n</script>\n\n<style scoped>\n.restaurant-management {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\nh2 {\n  margin-bottom: 20px;\n  color: #333;\n}\n\nh3 {\n  margin-bottom: 15px;\n  color: #666;\n}\n\n.restaurant-form {\n  background: #f9f9f9;\n  padding: 20px;\n  border-radius: 8px;\n  margin-bottom: 30px;\n}\n\n.location-inputs {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 10px;\n}\n\n.location-input {\n  width: 50%;\n}\n\n.map-container {\n  position: relative;\n  margin-top: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.map-error {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(255, 0, 0, 0.7);\n  color: white;\n  padding: 8px 16px;\n  border-radius: 4px;\n}\n\n.map-tip {\n  color: #909399;\n  font-size: 12px;\n  margin-bottom: 5px;\n}\n\n.restaurant-list {\n  margin-top: 30px;\n}\n</style> "]}]}