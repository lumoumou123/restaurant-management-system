{"remainingRequest":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\emergencyDispatch\\gugeMap.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\emergencyDispatch\\gugeMap.vue","mtime":1744730762765},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\babel-loader\\lib\\index.js","mtime":1742859682775},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js","mtime":1742859683968}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["gugeMap.vue"],"names":[],"mappings":";AA0KA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"gugeMap.vue","sourceRoot":"src/views/emergencyDispatch","sourcesContent":["<template>\n  <div>\n    <!-- 地图容器 -->\n    <div id=\"map\" style=\"width: 100%; height: 100vh;\"></div>\n    <div v-if=\"mapError\" class=\"map-error\">\n      {{ mapError }}\n    </div>\n\n    <!-- 自定义弹窗 -->\n    <div v-if=\"showCustomInfoWindow\" class=\"custom-info-window\">\n      <div class=\"info-header\">\n        <h3>{{ selectedLocation.name || \"暂无信息\" }}</h3>\n        <span class=\"close-btn\" @click=\"showCustomInfoWindow = false\">&times;</span>\n      </div>\n      <div class=\"info-image\">\n        <img\n          :src=\"selectedLocation.image || require('@/assets/imgs/image.png')\"\n          :alt=\"selectedLocation.name\"\n          @error=\"handleImageError\"\n        >\n      </div>\n      \n      <!-- 标签页导航 -->\n      <div class=\"tab-navigation\">\n        <div \n          class=\"tab-item\" \n          :class=\"{ active: activeTab === 'info' }\"\n          @click=\"activeTab = 'info'\"\n        >\n          Restaurant Info\n        </div>\n        <div \n          class=\"tab-item\" \n          :class=\"{ active: activeTab === 'menu' }\"\n          @click=\"activeTab = 'menu'; loadMenu()\"\n        >\n          Menu\n        </div>\n        <div \n          class=\"tab-item\" \n          :class=\"{ active: activeTab === 'comments' }\"\n          @click=\"activeTab = 'comments'\"\n        >\n          Comments\n        </div>\n      </div>\n      \n      <!-- 餐厅信息标签页 -->\n      <div v-if=\"activeTab === 'info'\" class=\"info-content\">\n        <div class=\"info-item\">\n          <strong>Business Hours:</strong>\n          <span>{{ selectedLocation.businessHours || \"N/A\" }}</span>\n        </div>\n        <div class=\"info-item\">\n          <strong>Current Rating:</strong>\n          <el-rate\n            v-model=\"selectedLocation.score\"\n            disabled\n            show-score\n            text-color=\"#ff9900\"\n            score-template=\"{value} points\"\n          />\n        </div>\n        <div class=\"info-item\">\n          <strong>Location:</strong>\n          <span class=\"coordinates\">{{ formatCoordinates(selectedLocation.lat, selectedLocation.lng) }}</span>\n          <el-button \n            size=\"mini\" \n            type=\"primary\" \n            icon=\"el-icon-copy-document\" \n            @click=\"copyCoordinates(selectedLocation.lat, selectedLocation.lng)\"\n            circle\n            title=\"Copy coordinates\"\n          ></el-button>\n        </div>\n        <div class=\"rating-system\">\n          <strong>Rate this Restaurant:</strong>\n          <el-rate\n            v-model=\"currentRating\"\n            :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\"\n            @change=\"rateLocation\"\n            show-text\n            :texts=\"['Poor', 'Fair', 'Average', 'Good', 'Excellent']\"\n          />\n        </div>\n      </div>\n      \n      <!-- 菜单标签页 -->\n      <div v-if=\"activeTab === 'menu'\" class=\"menu-content\">\n        <div v-if=\"menuItems.length === 0\" class=\"menu-loading\">\n          <p>Loading menu items...</p>\n        </div>\n        <div v-else-if=\"menuItems.length > 0\" class=\"menu-items\">\n          <div v-for=\"category in menuCategories\" :key=\"category\" class=\"menu-category\">\n            <h4 class=\"category-title\">{{ category }}</h4>\n            <div v-for=\"item in getItemsByCategory(category)\" :key=\"item.id\" class=\"menu-item\">\n              <div class=\"menu-item-header\">\n                <span class=\"menu-item-name\">{{ item.name }}</span>\n                <span class=\"menu-item-price\">€{{ Number(item.price).toFixed(2) }}</span>\n              </div>\n              <p class=\"menu-item-description\">{{ item.description || 'No description available' }}</p>\n              <div v-if=\"item.image\" class=\"menu-item-image\">\n                <img :src=\"item.image\" :alt=\"item.name\" @error=\"handleImageError\">\n              </div>\n              <el-tag \n                size=\"mini\" \n                :type=\"item.isAvailable ? 'success' : 'danger'\"\n                class=\"menu-item-status\"\n              >\n                {{ item.isAvailable ? 'Available' : 'Not Available' }}\n              </el-tag>\n            </div>\n          </div>\n        </div>\n        <div v-else class=\"no-menu\">\n          <p>No menu items available for this restaurant</p>\n        </div>\n      </div>\n      \n      <!-- 评论标签页 -->\n      <div v-if=\"activeTab === 'comments'\" class=\"comments-section\">\n        <h4>Comments</h4>\n        <!-- Add Comment -->\n        <div class=\"add-comment\">\n          <el-input\n            v-model=\"newComment\"\n            type=\"textarea\"\n            :rows=\"2\"\n            placeholder=\"Write your comment...\"\n          />\n          <el-button \n            type=\"primary\" \n            size=\"small\" \n            @click=\"submitComment\"\n            :disabled=\"!newComment.trim()\"\n          >Post Comment</el-button>\n        </div>\n        <!-- Comments List -->\n        <div class=\"comments-list\" v-if=\"comments.length > 0\">\n          <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment-item\">\n            <div class=\"comment-header\">\n              <span class=\"username\">{{ comment.userName }}</span>\n              <span class=\"time\">{{ formatTime(comment.createTime) }}</span>\n              <el-button \n                v-if=\"comment.userId === currentUserId\" \n                type=\"text\" \n                size=\"mini\"\n                @click=\"deleteComment(comment.id)\"\n              >Delete</el-button>\n            </div>\n            <div class=\"comment-content\">{{ comment.content }}</div>\n          </div>\n        </div>\n        <div v-else class=\"no-comments\">No comments yet</div>\n      </div>\n    </div>\n\n    <!-- Login Dialog -->\n    <el-dialog\n      title=\"Login\"\n      :visible.sync=\"showLoginDialog\"\n      width=\"400px\"\n      @close=\"showLoginDialog = false\"\n    >\n      <Login @close=\"showLoginDialog = false\" @login-success=\"handleLoginSuccess\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { rate, getComments, addComment, deleteComment } from '@/api'\nimport axios from 'axios'\nimport Login from '../Login.vue'\n\nexport default {\n  name: \"GoogleMap\",\n  components: {\n    Login\n  },\n  props: {\n    cantindizhi: {\n      type: Object,\n      required: true,\n      validator: (value) => {\n        return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n      }\n    }\n  },\n  data() {\n    return {\n      map: null, // 地图实例\n      markers: [], // 当前标记数组\n      isMapLoaded: false, // 用于标记地图是否加载完成\n      showCustomInfoWindow: false, // 控制自定义弹窗显示\n      selectedLocation: {}, // 当前选中的位置信息\n      currentRating: 0, // 当前评分\n      comments: [],\n      newComment: '',\n      currentUserId: null,\n      currentUserName: null,\n      mapError: null,\n      showLoginDialog: false,\n      menuItems: [], // 存储菜单项\n      activeTab: 'info' // 控制当前激活的标签页\n    };\n  },\n  watch: {\n    cantindizhi: {\n      handler(newVal) {\n        console.log(newVal, \"newVal\");\n        if (this.isMapLoaded && newVal && newVal.lat && newVal.lng) {\n          newVal.lat = Number(newVal.lat)\n          newVal.lng = Number(newVal.lng)\n          newVal.score = Number(newVal.score)\n          this.animatePanTo(newVal); // 使用动画平移到位置\n        }\n      },\n      immediate: true, // 初始加载时也触发\n    },\n  },\n  created() {\n    // 初始化时检查登录状态\n    this.checkLoginStatus();\n    \n    // 监听 storage 事件，当本地存储变化时更新登录状态\n    window.addEventListener('storage', this.checkLoginStatus);\n    \n    // 监听自定义事件\n    this.$root.$on('user-logged-in', this.handleUserLogin);\n  },\n  mounted() {\n    this.checkLoginStatus();\n    \n    // 修改 Google Maps API 加载方式\n    if (window.google && window.google.maps) {\n      this.initMap();\n    } else {\n      // 如果Google Maps API尚未加载，添加错误消息\n      this.mapError = 'Google Maps API loading...';\n      console.log('Google Maps API not loaded, waiting for load from index.html');\n      \n      // 创建一个轮询检查Maps API是否加载完成\n      const checkGoogleMapsLoaded = setInterval(() => {\n        if (window.google && window.google.maps) {\n          clearInterval(checkGoogleMapsLoaded);\n          this.initMap();\n          console.log('Google Maps API loaded successfully');\n        }\n      }, 500);\n      \n      // 设置超时，防止无限等待\n      setTimeout(() => {\n        clearInterval(checkGoogleMapsLoaded);\n        if (!window.google || !window.google.maps) {\n          this.mapError = 'Google Maps API failed to load. Attempting to load directly...';\n          console.error('Google Maps API load timeout, attempting direct load');\n          \n          // 备用方案：直接加载\n          const apiKey = window.GOOGLE_MAPS_API_KEY || 'AIzaSyBq7Bh-Qq7cSssxzwhWxdhDXJJMTobt0iI';\n          const script = document.createElement('script');\n          script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&language=en&region=IE&callback=initGoogleMap`;\n          script.async = true;\n          script.defer = true;\n          \n          // 全局回调函数\n          window.initGoogleMap = () => {\n            this.initMap();\n          };\n          \n          document.head.appendChild(script);\n        }\n      }, 5000);\n    }\n  },\n  beforeDestroy() {\n    // 移除事件监听\n    window.removeEventListener('storage', this.checkLoginStatus);\n    this.$root.$off('user-logged-in', this.handleUserLogin);\n  },\n  methods: {\n    checkLoginStatus() {\n      try {\n        const userId = localStorage.getItem(\"userId\");\n        const userName = localStorage.getItem(\"userName\");\n        \n        console.log(\"Map component checking localStorage:\", {\n          userId,\n          userName,\n          rawValues: {\n            userId: localStorage.getItem(\"userId\"),\n            userName: localStorage.getItem(\"userName\")\n          }\n        });\n        \n        if (!userId || !userName) {\n          console.log(\"User not logged in or login information incomplete\");\n          this.currentUserId = null;\n          this.currentUserName = null;\n          return false;\n        }\n\n        this.currentUserId = userId;\n        this.currentUserName = userName;\n        console.log(\"User logged in:\", { \n          currentUserId: this.currentUserId, \n          currentUserName: this.currentUserName \n        });\n        return true;\n      } catch (error) {\n        console.error(\"Error checking login status:\", error);\n        return false;\n      }\n    },\n    initMap() {\n      const mapContainer = document.getElementById(\"map\");\n      if (!mapContainer) {\n        this.mapError = 'Map container not found';\n        console.error(\"Map container not found!\");\n        return;\n      }\n\n      try {\n        // 创建自定义的地图类型控件\n        const customMapTypeControlDiv = document.createElement('div');\n        customMapTypeControlDiv.className = 'custom-map-type-control';\n        customMapTypeControlDiv.style.padding = '5px';\n        customMapTypeControlDiv.style.display = 'flex';\n        customMapTypeControlDiv.style.backgroundColor = 'white';\n        customMapTypeControlDiv.style.boxShadow = '0 1px 4px rgba(0,0,0,0.3)';\n        customMapTypeControlDiv.style.borderRadius = '2px';\n        customMapTypeControlDiv.style.margin = '10px';\n        customMapTypeControlDiv.style.zIndex = '1';\n        \n        // 创建地图按钮\n        const mapButton = document.createElement('div');\n        mapButton.textContent = 'Map';\n        mapButton.style.padding = '8px 16px';\n        mapButton.style.cursor = 'pointer';\n        mapButton.style.fontFamily = 'Arial, sans-serif';\n        mapButton.style.fontWeight = 'bold';\n        mapButton.style.fontSize = '14px';\n        mapButton.style.color = '#666';\n        mapButton.onclick = () => {\n          this.map.setMapTypeId('roadmap');\n          mapButton.style.color = '#1a73e8';\n          satelliteButton.style.color = '#666';\n        };\n        \n        // 创建卫星按钮\n        const satelliteButton = document.createElement('div');\n        satelliteButton.textContent = 'Satellite';\n        satelliteButton.style.padding = '8px 16px';\n        satelliteButton.style.cursor = 'pointer';\n        satelliteButton.style.fontFamily = 'Arial, sans-serif';\n        satelliteButton.style.fontWeight = 'bold';\n        satelliteButton.style.fontSize = '14px';\n        satelliteButton.style.color = '#666';\n        satelliteButton.onclick = () => {\n          this.map.setMapTypeId('satellite');\n          satelliteButton.style.color = '#1a73e8';\n          mapButton.style.color = '#666';\n        };\n        \n        // 添加按钮到控件\n        customMapTypeControlDiv.appendChild(mapButton);\n        customMapTypeControlDiv.appendChild(satelliteButton);\n        \n        // 创建地图\n        this.map = new google.maps.Map(mapContainer, {\n          center: { lat: 53.4129, lng: -8.2439 },\n          zoom: 7,\n          language: 'en',\n          region: 'IE',\n          mapTypeControl: false, // 关闭默认的地图类型控件\n          zoomControl: true,\n          streetViewControl: true,\n          fullscreenControl: true\n        });\n        \n        // 将自定义控件添加到地图上\n        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(customMapTypeControlDiv);\n\n        this.isMapLoaded = true;\n\n        if (this.cantindizhi && this.cantindizhi.lat && this.cantindizhi.lng) {\n          this.animatePanTo(this.cantindizhi);\n        }\n\n        this.map.addListener('dragstart', () => {\n          this.showCustomInfoWindow = false;\n        });\n\n        this.map.addListener('zoom_changed', () => {\n          this.showCustomInfoWindow = false;\n        });\n      } catch (error) {\n        this.mapError = 'Map initialization failed: ' + error.message;\n        console.error('Map initialization error:', error);\n      }\n    },\n    animatePanTo(location) {\n      if (!location || !this.map) return;\n\n      // 清除现有标记\n      this.clearMarkers();\n\n      // 创建新的标记\n      const marker = new google.maps.Marker({\n        position: { lat: location.lat, lng: location.lng },\n        map: this.map,\n        title: location.name || \"Location\"\n      });\n\n      // 创建信息窗口的覆盖层\n      const overlay = new google.maps.OverlayView();\n      overlay.draw = function() {};\n      overlay.setMap(this.map);\n\n      // 添加标记点击事件\n      marker.addListener(\"click\", () => {\n        const markerPosition = marker.getPosition();\n        \n        // 计算信息窗口位置\n        const calculatePosition = () => {\n          const projection = overlay.getProjection();\n          const point = projection.fromLatLngToContainerPixel(markerPosition);\n          \n          console.log('选中的餐厅信息:', location);\n          this.selectedLocation = location;\n          this.showCustomInfoWindow = true;\n          this.activeTab = 'info'; // 默认显示信息标签页\n          this.loadComments(); // 加载评论\n          // 预加载菜单数据\n          this.loadMenu();\n        };\n\n        // 确保投影已准备好\n        if (overlay.getProjection()) {\n          calculatePosition();\n        } else {\n          overlay.addListener('add', () => {\n            setTimeout(calculatePosition, 100);\n          });\n        }\n      });\n\n      this.markers.push(marker);\n\n      // 平滑移动到新位置\n      this.map.panTo({ lat: location.lat, lng: location.lng });\n      this.map.setZoom(15);\n    },\n    clearMarkers() {\n      // 清除地图上的标记\n      this.markers.forEach((marker) => marker.setMap(null));\n      this.markers = [];\n    },\n    rateLocation(value) {\n      if (!this.selectedLocation || !this.selectedLocation.id) {\n        this.$message.error(\"Cannot get restaurant information\");\n        return;\n      }\n      \n      rate({id: this.selectedLocation.id, score: value})\n        .then(res => {\n          if (res.code === 200) {\n            this.$message.success(\"Rating submitted successfully\");\n            // Update the score with the new average from the response\n            if (res.data && typeof res.data.averageRating === 'number') {\n              this.selectedLocation.score = res.data.averageRating;\n              // Emit event to update parent components\n              this.$emit('rating-updated', {\n                restaurantId: this.selectedLocation.id,\n                newRating: res.data.averageRating,\n                totalRatings: res.data.totalRatings\n              });\n            }\n          } else {\n            this.$message.error(res.msg || \"Failed to submit rating\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Rating submission failed:\", error);\n          this.$message.error(\"Failed to submit rating, please try again\");\n          this.currentRating = 0; // Reset the rating\n        });\n    },\n    loadComments() {\n      if (!this.selectedLocation || !this.selectedLocation.id) {\n        console.error('无法加载评论：餐厅ID为空', this.selectedLocation);\n        return;\n      }\n      \n      console.log('正在加载评论，餐厅ID:', this.selectedLocation.id);\n      getComments(this.selectedLocation.id)\n        .then(res => {\n          console.log('评论加载响应:', res);\n          if (res.code === 200) {\n            this.comments = res.data;\n          }\n        })\n        .catch(error => {\n          console.error('加载评论失败，详细错误：', error);\n          this.$message.error('加载评论失败');\n        });\n    },\n    async submitComment() {\n      console.log(\"Attempting to submit comment\");\n      // 强制重新检查登录状态\n      const isLoggedIn = this.checkLoginStatus();\n      console.log(\"Login status check before comment:\", { isLoggedIn, userId: this.currentUserId, userName: this.currentUserName });\n      \n      if (!isLoggedIn) {\n        this.$message.warning(\"Please login before commenting\");\n        this.showLoginDialog = true;\n        return;\n      }\n\n      if (!this.selectedLocation || !this.selectedLocation.id) {\n        this.$message.warning(\"Please select a restaurant first\");\n        return;\n      }\n\n      try {\n        const commentData = {\n          userId: this.currentUserId,\n          userName: this.currentUserName,\n          restaurantId: this.selectedLocation.id,\n          content: this.newComment\n        };\n\n        console.log(\"Comment data to submit:\", commentData);\n        \n        const result = await addComment(commentData);\n        \n        if (result.code === 200) {\n          this.$message.success(\"Comment submitted successfully!\");\n          this.newComment = \"\";\n          await this.loadComments();\n        } else {\n          throw new Error(result.msg || \"Failed to submit comment\");\n        }\n      } catch (error) {\n        console.error(\"Comment submission failed:\", error);\n        this.$message.error(error.message || \"Failed to submit comment, please try again later\");\n      }\n    },\n    deleteComment(commentId) {\n      deleteComment(commentId)\n        .then(res => {\n          if (res.code === 200) {\n            this.$message.success('删除成功');\n            this.loadComments();\n          }\n        })\n        .catch(error => {\n          console.error('删除评论失败：', error);\n          this.$message.error('删除评论失败');\n        });\n    },\n    formatTime(time) {\n      if (!time) return '';\n      const date = new Date(time);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    },\n    handleImageError(e) {\n      e.target.src = require('@/assets/imgs/image.png');\n    },\n    // 处理登录事件\n    handleUserLogin(userData) {\n      console.log(\"地图组件收到登录事件:\", userData);\n      this.currentUserId = userData.userId;\n      this.currentUserName = userData.userName;\n      console.log(\"更新后的用户状态:\", {\n        currentUserId: this.currentUserId,\n        currentUserName: this.currentUserName\n      });\n    },\n    handleLoginSuccess(userData) {\n      console.log(\"登录成功:\", userData);\n      this.currentUserId = userData.userId;\n      this.currentUserName = userData.userName;\n      console.log(\"更新后的用户状态:\", {\n        currentUserId: this.currentUserId,\n        currentUserName: this.currentUserName\n      });\n    },\n    // 加载菜单\n    loadMenu() {\n      if (!this.selectedLocation || !this.selectedLocation.id) {\n        console.error('无法加载菜单：餐厅ID为空', this.selectedLocation);\n        return;\n      }\n      \n      console.log('正在加载菜单，餐厅ID:', this.selectedLocation.id);\n      axios.get(`http://localhost:8080/menu/restaurant/${this.selectedLocation.id}`)\n        .then(res => {\n          console.log('菜单加载响应:', res.data);\n          if (res.data.code === 200) {\n            this.menuItems = res.data.data || [];\n            console.log('加载的菜单项:', this.menuItems);\n          } else {\n            console.error('加载菜单失败:', res.data.msg);\n            this.$message.error('Failed to load menu');\n          }\n        })\n        .catch(error => {\n          console.error('加载菜单失败，详细错误：', error);\n          this.$message.error('Error loading menu');\n        });\n    },\n    \n    // 计算菜单分类\n    getItemsByCategory(category) {\n      return this.menuItems.filter(item => item.category === category);\n    },\n    formatCoordinates(lat, lng) {\n      if (!lat || !lng) return 'N/A';\n      return `${lat.toFixed(6)},${lng.toFixed(6)}`;\n    },\n    copyCoordinates(lat, lng) {\n      if (!lat || !lng) {\n        this.$message.warning('No valid coordinates to copy');\n        return;\n      }\n      \n      const coordString = `${lat.toFixed(6)},${lng.toFixed(6)}`;\n      \n      // 尝试使用现代剪贴板API\n      navigator.clipboard.writeText(coordString)\n        .then(() => {\n          this.$message.success(`Coordinates copied: ${coordString}`);\n        })\n        .catch(err => {\n          // 备用方法\n          const textArea = document.createElement('textarea');\n          textArea.value = coordString;\n          textArea.style.position = 'fixed';\n          textArea.style.left = '-999999px';\n          textArea.style.top = '-999999px';\n          document.body.appendChild(textArea);\n          textArea.focus();\n          textArea.select();\n          \n          try {\n            document.execCommand('copy');\n            this.$message.success(`Coordinates copied: ${coordString}`);\n          } catch (err) {\n            this.$message.error('Failed to copy coordinates');\n          }\n          \n          document.body.removeChild(textArea);\n        });\n    },\n    // Add loadCurrentRating method\n    async loadCurrentRating() {\n      if (!this.selectedLocation || !this.selectedLocation.id) return;\n      \n      try {\n        const response = await axios.get(`http://localhost:8080/current-rating/${this.selectedLocation.id}`);\n        if (response.data.code === 200) {\n          const result = response.data.data;\n          this.selectedLocation.score = result.averageRating;\n        }\n      } catch (error) {\n        console.error('Error loading current rating:', error);\n        this.$message.error('Failed to refresh rating');\n      }\n    },\n  },\n  computed: {\n    // 提取所有不重复的菜单分类\n    menuCategories() {\n      const categories = this.menuItems\n        .map(item => item.category)\n        .filter(category => category); // 过滤掉空值\n      \n      // 返回去重后的分类\n      return [...new Set(categories)];\n    }\n  },\n};\n</script>\n\n<style scoped>\n/* 地图样式 */\n#map {\n  width: 100%;\n  height: 100vh;\n}\n\n.custom-info-window {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: white;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  width: 400px;\n  max-height: 80vh;\n  overflow-y: auto;\n}\n\n.info-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 10px;\n  position: sticky;\n  top: 0;\n  background: white;\n  z-index: 1;\n}\n\n.info-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.close-btn {\n  cursor: pointer;\n  font-size: 24px;\n  color: #666;\n}\n\n.info-content {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.info-item {\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.rating-system {\n  margin-top: 15px;\n  padding-top: 15px;\n  border-top: 1px solid #eee;\n}\n\n.info-image {\n  margin: -20px -20px 15px -20px;\n  overflow: hidden;\n  height: 150px;\n}\n\n.info-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: block;\n}\n\n.comments-section {\n  margin-top: 20px;\n  border-top: 1px solid #eee;\n  padding-top: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.comments-section h4 {\n  margin: 0;\n  color: #333;\n  font-size: 16px;\n}\n\n.add-comment {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 15px;\n}\n\n.add-comment .el-button {\n  align-self: flex-end;\n  margin: 0;\n}\n\n.comments-list {\n  max-height: 300px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.comment-item {\n  background: #f9f9f9;\n  border-radius: 8px;\n  padding: 12px;\n  margin: 0;\n}\n\n.comment-header {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 8px;\n}\n\n.username {\n  font-weight: 600;\n  color: #409EFF;\n  font-size: 14px;\n}\n\n.time {\n  font-size: 12px;\n  color: #999;\n  margin-left: auto;\n}\n\n.comment-content {\n  color: #333;\n  line-height: 1.5;\n  font-size: 14px;\n  word-break: break-all;\n  white-space: pre-wrap;\n}\n\n.no-comments {\n  text-align: center;\n  color: #999;\n  padding: 30px 0;\n  background: #f9f9f9;\n  border-radius: 8px;\n}\n\n.map-error {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(255, 0, 0, 0.8);\n  color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  z-index: 1000;\n}\n\n/* 调整 el-rate 的样式 */\n:deep(.el-rate) {\n  display: flex;\n  align-items: center;\n}\n\n:deep(.el-rate__text) {\n  margin-left: 10px;\n  font-size: 14px;\n  color: #666;\n}\n\n/* 标签页导航 */\n.tab-navigation {\n  display: flex;\n  border-bottom: 1px solid #eee;\n  margin-bottom: 15px;\n}\n\n.tab-item {\n  padding: 10px 15px;\n  cursor: pointer;\n  font-weight: 500;\n  color: #606266;\n  border-bottom: 2px solid transparent;\n  transition: all 0.3s;\n}\n\n.tab-item.active {\n  color: #409EFF;\n  border-bottom-color: #409EFF;\n}\n\n.tab-item:hover {\n  color: #409EFF;\n}\n\n/* 菜单样式 */\n.menu-content {\n  margin-top: 15px;\n}\n\n.menu-loading,\n.no-menu {\n  text-align: center;\n  color: #999;\n  padding: 20px 0;\n}\n\n.menu-category {\n  margin-bottom: 20px;\n}\n\n.category-title {\n  font-size: 18px;\n  color: #333;\n  margin-bottom: 10px;\n  padding-bottom: 5px;\n  border-bottom: 1px solid #eee;\n}\n\n.menu-item {\n  background: #f9f9f9;\n  border-radius: 8px;\n  padding: 12px;\n  margin-bottom: 10px;\n  position: relative;\n}\n\n.menu-item-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n}\n\n.menu-item-name {\n  font-weight: 600;\n  font-size: 16px;\n  color: #333;\n}\n\n.menu-item-price {\n  font-weight: 600;\n  color: #67c23a;\n}\n\n.menu-item-description {\n  color: #666;\n  font-size: 14px;\n  margin: 5px 0;\n}\n\n.menu-item-image {\n  margin-top: 10px;\n  height: 100px;\n  overflow: hidden;\n  border-radius: 4px;\n}\n\n.menu-item-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.menu-item-status {\n  margin-top: 8px;\n}\n\n.coordinates {\n  font-family: monospace;\n  background-color: #f5f7fa;\n  padding: 3px 6px;\n  border-radius: 4px;\n  border: 1px solid #e4e7ed;\n  margin-right: 8px;\n  font-size: 13px;\n}\n</style>\n"]}]}