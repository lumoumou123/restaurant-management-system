{"remainingRequest":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\RestaurantStatistics.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\RestaurantStatistics.vue","mtime":1744632232807},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\babel-loader\\lib\\index.js","mtime":1742859682775},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js","mtime":1742859683968}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RestaurantStatistics.vue"],"names":[],"mappings":";AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RestaurantStatistics.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"restaurant-statistics\">\r\n    <div class=\"header\">\r\n      <h1>Restaurant Statistics Dashboard</h1>\r\n      <el-button type=\"primary\" icon=\"el-icon-back\" @click=\"backToHome\">Back to Home</el-button>\r\n    </div>\r\n\r\n    <!-- 筛选条件 -->\r\n    <div class=\"filters\">\r\n      <el-date-picker\r\n        v-model=\"dateRange\"\r\n        type=\"daterange\"\r\n        range-separator=\"to\"\r\n        start-placeholder=\"Start Date\"\r\n        end-placeholder=\"End Date\"\r\n        :default-time=\"['00:00:00', '23:59:59']\"\r\n        @change=\"fetchStatistics\"\r\n      />\r\n      \r\n      <el-select\r\n        v-model=\"selectedRestaurant\"\r\n        placeholder=\"Select Restaurant\"\r\n        @change=\"fetchStatistics\"\r\n        class=\"restaurant-select\"\r\n      >\r\n        <el-option\r\n          v-for=\"restaurant in restaurants\"\r\n          :key=\"restaurant.id\"\r\n          :label=\"restaurant.name\"\r\n          :value=\"restaurant.id\"\r\n        />\r\n      </el-select>\r\n\r\n      <div class=\"action-buttons\">\r\n        <el-button type=\"primary\" @click=\"loadMockData\">Load Mock Data</el-button>\r\n        <el-button type=\"success\" @click=\"testAPI\">Test API</el-button>\r\n        <el-button type=\"info\" @click=\"logRestaurantDetails\">Log Restaurant Details</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 主要指标卡片 -->\r\n    <div class=\"metric-cards\">\r\n      <el-card class=\"metric-card\">\r\n        <div class=\"metric-title\">Average Rating</div>\r\n        <div class=\"metric-value\">\r\n          <span class=\"number\">{{ Number(statistics.averageRating || 0).toFixed(1) }}</span>\r\n          <el-rate\r\n            v-model=\"statistics.averageRating\"\r\n            disabled\r\n            show-score\r\n            text-color=\"#ff9900\"\r\n            score-template=\"\"\r\n          />\r\n          <span class=\"rating-count\" v-if=\"statistics.totalScores\">\r\n            ({{ statistics.totalScores }} ratings)\r\n          </span>\r\n        </div>\r\n      </el-card>\r\n\r\n      <el-card class=\"metric-card\">\r\n        <div class=\"metric-title\">Comments</div>\r\n        <div class=\"metric-value\">\r\n          <span class=\"number\">{{ statistics.totalComments || 0 }}</span>\r\n        </div>\r\n      </el-card>\r\n\r\n      <el-card class=\"metric-card\">\r\n        <div class=\"metric-title\">Menu Items</div>\r\n        <div class=\"metric-value\">\r\n          <span class=\"number\">{{ statistics.menuItemCount || 0 }}</span>\r\n        </div>\r\n      </el-card>\r\n\r\n      <el-card class=\"metric-card\">\r\n        <div class=\"metric-title\">Total Views</div>\r\n        <div class=\"metric-value\">\r\n          <span class=\"number\">{{ statistics.totalViews || 0 }}</span>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 图表区域 -->\r\n    <div class=\"charts-container\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"12\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">Rating Distribution</div>\r\n            <div class=\"chart-container\">\r\n              <v-chart :option=\"ratingDistributionChart\" autoresize />\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        \r\n        <el-col :span=\"12\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">Views Trend</div>\r\n            <div class=\"chart-container\">\r\n              <v-chart :option=\"viewsTrendChart\" autoresize />\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        \r\n        <el-col :span=\"12\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">Popular Dishes</div>\r\n            <div class=\"chart-container\">\r\n              <v-chart :option=\"popularDishesChart\" autoresize />\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        \r\n        <el-col :span=\"12\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">Comments Timeline</div>\r\n            <div class=\"chart-container\">\r\n              <v-chart :option=\"commentsTimelineChart\" autoresize />\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ECharts from 'vue-echarts';\r\nimport 'echarts/lib/chart/bar';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/pie';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\nimport 'echarts/lib/component/grid';\r\nimport axios from 'axios';\r\nimport { getRestaurantStatistics } from '@/api/statistics'\r\n\r\nexport default {\r\n  name: 'RestaurantStatistics',\r\n  components: {\r\n    'v-chart': ECharts\r\n  },\r\n  data() {\r\n    return {\r\n      dateRange: [\r\n        new Date(new Date().setDate(new Date().getDate() - 7)),\r\n        new Date()\r\n      ],\r\n      selectedRestaurant: null,\r\n      restaurants: [],\r\n      statistics: {\r\n        averageRating: 0,\r\n        totalComments: 0,\r\n        menuItemCount: 0,\r\n        totalViews: 0,\r\n        ratingDistribution: {},\r\n        viewsTrend: [],\r\n        popularDishes: [],\r\n        commentsTimeline: []\r\n      },\r\n      userRole: '',\r\n      userId: null\r\n    };\r\n  },\r\n  computed: {\r\n    ratingDistributionChart() {\r\n      const data = Object.entries(this.statistics.ratingDistribution || {}).map(\r\n        ([rating, count]) => ({\r\n          name: `${rating} Star`,\r\n          value: count\r\n        })\r\n      );\r\n\r\n      return {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{b}: {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: ['50%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            label: {\r\n              show: true,\r\n              position: 'outside'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '16',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: true\r\n            },\r\n            data: data\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    viewsTrendChart() {\r\n      const { viewsTrend = [] } = this.statistics;\r\n      return {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: viewsTrend.map(item => item.date)\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            data: viewsTrend.map(item => item.views),\r\n            type: 'line',\r\n            smooth: true,\r\n            areaStyle: {}\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    popularDishesChart() {\r\n      const { popularDishes = [] } = this.statistics;\r\n      return {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'value'\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: popularDishes.map(item => item.name)\r\n        },\r\n        series: [\r\n          {\r\n            type: 'bar',\r\n            data: popularDishes.map(item => item.orderCount)\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    commentsTimelineChart() {\r\n      const { commentsTimeline = [] } = this.statistics;\r\n      return {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: commentsTimeline.map(item => item.date)\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            data: commentsTimeline.map(item => item.count),\r\n            type: 'line',\r\n            smooth: true\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    calculateTotalRatings() {\r\n      if (!this.statistics.ratingDistribution) return 0;\r\n      return Object.values(this.statistics.ratingDistribution).reduce((a, b) => a + b, 0);\r\n    }\r\n  },\r\n  created() {\r\n    // 获取用户信息\r\n    this.userRole = localStorage.getItem('userRole');\r\n    this.userId = localStorage.getItem('userId');\r\n    \r\n    // 设置默认日期范围为最近7天\r\n    const end = new Date();\r\n    const start = new Date();\r\n    start.setDate(start.getDate() - 7);\r\n    this.dateRange = [start, end];\r\n    \r\n    // 获取餐厅列表\r\n    this.fetchRestaurants();\r\n  },\r\n  methods: {\r\n    async fetchRestaurants() {\r\n      try {\r\n        // 获取认证信息\r\n        const token = localStorage.getItem('token');\r\n        const headers = token ? { 'Authorization': `Bearer ${token}` } : {};\r\n        \r\n        // 添加用户ID和角色到请求头\r\n        headers['X-User-Id'] = this.userId;\r\n        headers['X-User-Role'] = this.userRole;\r\n        \r\n        console.log(\"加载餐厅统计列表: 当前用户角色:\", this.userRole, \"用户ID:\", this.userId);\r\n        \r\n        let response;\r\n        \r\n        if (this.userRole === 'Manager') {\r\n          // 管理员可以看到所有餐厅\r\n          response = await axios.get('http://localhost:8080/api/canteen/list', { headers });\r\n        } else if (this.userRole === 'Owner') {\r\n          // 业主只能看到自己的餐厅\r\n          response = await axios.get(`http://localhost:8080/api/canteen/owner/canteens`, { headers });\r\n        } else {\r\n          this.$message.warning('您的用户角色不允许访问餐厅统计信息');\r\n          return;\r\n        }\r\n\r\n        if (response && response.data && response.data.code === 200) {\r\n          this.restaurants = response.data.data || [];\r\n          console.log(`成功加载${this.restaurants.length}家餐厅用于统计`);\r\n          \r\n          if (this.restaurants.length > 0) {\r\n            this.selectedRestaurant = this.restaurants[0].id;\r\n            this.fetchStatistics();\r\n          } else {\r\n            this.$message.warning('未找到任何餐厅');\r\n          }\r\n        } else {\r\n          this.$message.error('加载餐厅列表失败: ' + (response?.data?.msg || '未知错误'));\r\n          console.error(\"加载餐厅失败:\", response?.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch restaurants:', error);\r\n        console.error(\"请求失败详情:\", error.response ? error.response.data : error.message);\r\n        this.$message.error('Failed to load restaurants: ' + (error.response?.data?.msg || error.message));\r\n      }\r\n    },\r\n    async fetchStatistics() {\r\n      if (!this.selectedRestaurant || !this.dateRange) {\r\n        this.$message.warning('Please select both restaurant and date range');\r\n        return;\r\n      }\r\n\r\n      const [startDate, endDate] = this.dateRange;\r\n      console.log('Fetching statistics for:', {\r\n        restaurantId: this.selectedRestaurant,\r\n        startDate: startDate.toISOString().split('T')[0],\r\n        endDate: endDate.toISOString().split('T')[0]\r\n      });\r\n\r\n      try {\r\n        const response = await getRestaurantStatistics(\r\n          this.selectedRestaurant,\r\n          startDate.toISOString().split('T')[0],\r\n          endDate.toISOString().split('T')[0]\r\n        );\r\n\r\n        console.log('Raw API response:', response);\r\n\r\n        if (response.code === 200) {\r\n          this.statistics = response.data;\r\n          // Ensure averageRating is a number\r\n          this.statistics.averageRating = Number(this.statistics.averageRating || 0);\r\n          console.log('Processed statistics:', this.statistics);\r\n        } else {\r\n          console.error('API error:', response);\r\n          this.$message.error(response.msg || 'Failed to load statistics');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch statistics:', error);\r\n        this.$message.error('Failed to load statistics');\r\n      }\r\n    },\r\n    loadMockData() {\r\n      this.statistics = {\r\n        averageRating: 4.4,\r\n        totalComments: 0,\r\n        menuItemCount: 0,\r\n        totalViews: 4079,\r\n        ratingDistribution: {\r\n          '1 Star': 5,\r\n          '2 Stars': 10,\r\n          '3 Stars': 20,\r\n          '4 Stars': 40,\r\n          '5 Stars': 25\r\n        },\r\n        viewsTrend: Array.from({ length: 7 }, (_, i) => ({\r\n          date: new Date(Date.now() - (6 - i) * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n          views: Math.floor(Math.random() * 100) + 50\r\n        })),\r\n        popularDishes: [\r\n          { name: 'Dish 1', orderCount: 45 },\r\n          { name: 'Dish 2', orderCount: 38 },\r\n          { name: 'Dish 3', orderCount: 32 },\r\n          { name: 'Dish 4', orderCount: 25 },\r\n          { name: 'Dish 5', orderCount: 20 }\r\n        ],\r\n        commentsTimeline: Array.from({ length: 7 }, (_, i) => ({\r\n          date: new Date(Date.now() - (6 - i) * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n          count: Math.floor(Math.random() * 10)\r\n        }))\r\n      };\r\n    },\r\n    async testAPI() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/statistics/test');\r\n        this.$message.success('API test successful');\r\n      } catch (error) {\r\n        console.error('API test failed:', error);\r\n        this.$message.error('API test failed');\r\n      }\r\n    },\r\n    logRestaurantDetails() {\r\n      console.log('Current Statistics:', this.statistics);\r\n      console.log('Selected Restaurant:', this.selectedRestaurant);\r\n      console.log('Date Range:', this.dateRange);\r\n    },\r\n    backToHome() {\r\n      this.$router.push('/');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.restaurant-statistics {\r\n  padding: 20px;\r\n  background-color: #f5f7fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.header h1 {\r\n  margin: 0;\r\n  color: #303133;\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.restaurant-select {\r\n  min-width: 200px;\r\n}\r\n\r\n.action-buttons {\r\n  margin-left: auto;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.metric-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.metric-card {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.metric-title {\r\n  color: #909399;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.metric-value {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.metric-value .number {\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.metric-value .rating-count {\r\n  font-size: 14px;\r\n  color: #909399;\r\n}\r\n\r\n.metric-value :deep(.el-rate) {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 5px 0;\r\n}\r\n\r\n.metric-value :deep(.el-rate__icon) {\r\n  font-size: 20px;\r\n  margin-right: 4px;\r\n}\r\n\r\n.charts-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-container {\r\n  height: 300px;\r\n  width: 100%;\r\n}\r\n\r\n:deep(.el-card__header) {\r\n  padding: 15px 20px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n:deep(.el-date-editor.el-input),\r\n:deep(.el-date-editor.el-input__inner) {\r\n  width: 320px;\r\n}\r\n</style> "]}]}