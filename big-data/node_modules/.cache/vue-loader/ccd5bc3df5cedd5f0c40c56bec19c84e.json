{"remainingRequest":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18167\\Desktop\\big-data\\src\\views\\emergencyDispatch\\gugeMap.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18167\\Desktop\\big-data\\src\\views\\emergencyDispatch\\gugeMap.vue","mtime":1739146273584},{"path":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\babel-loader@8.4.1\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18167\\Desktop\\big-data\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyByYXRlLGdldGxpc3R9IGZyb20gJ0AvYXBpJw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiR29vZ2xlTWFwIiwNCiAgcHJvcHM6IHsNCiAgICBjYW50aW5kaXpoaTogT2JqZWN0LCAvLyDljZXkuKrlr7nosaENCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgbWFwOiBudWxsLCAvLyDlnLDlm77lrp7kvosNCiAgICAgIG1hcmtlcnM6IFtdLCAvLyDlvZPliY3moIforrDmlbDnu4QNCiAgICAgIGlzTWFwTG9hZGVkOiBmYWxzZSwgLy8g55So5LqO5qCH6K6w5Zyw5Zu+5piv5ZCm5Yqg6L295a6M5oiQDQogICAgICBzaG93Q3VzdG9tSW5mb1dpbmRvdzogZmFsc2UsIC8vIOaOp+WItuiHquWumuS5ieW8ueeql+aYvuekug0KICAgICAgc2VsZWN0ZWRMb2NhdGlvbjoge30sIC8vIOW9k+WJjemAieS4reeahOS9jee9ruS/oeaBrw0KICAgICAgY3VycmVudFJhdGluZzogMCwgLy8g5b2T5YmN6K+E5YiGDQogICAgICBpbmZvV2luZG93UG9zaXRpb246IHsNCiAgICAgICAgdG9wOiAnMHB4JywNCiAgICAgICAgbGVmdDogJzBweCcNCiAgICAgIH0NCiAgICB9Ow0KICB9LA0KICB3YXRjaDogew0KICAgIGNhbnRpbmRpemhpOiB7DQogICAgICBoYW5kbGVyKG5ld1ZhbCkgew0KICAgICAgICBjb25zb2xlLmxvZyhuZXdWYWwsICJuZXdWYWwiKTsNCiAgICAgICAgaWYgKHRoaXMuaXNNYXBMb2FkZWQgJiYgbmV3VmFsICYmIG5ld1ZhbC5sYXQgJiYgbmV3VmFsLmxuZykgew0KICAgICAgICAgIG5ld1ZhbC5sYXQgPSBOdW1iZXIobmV3VmFsLmxhdCkNCiAgICAgICAgICBuZXdWYWwubG5nID0gTnVtYmVyKG5ld1ZhbC5sbmcpDQogICAgICAgICAgbmV3VmFsLnNjb3JlID0gTnVtYmVyKG5ld1ZhbC5zY29yZSkNCiAgICAgICAgICB0aGlzLmFuaW1hdGVQYW5UbyhuZXdWYWwpOyAvLyDkvb/nlKjliqjnlLvlubPnp7vliLDkvY3nva4NCiAgICAgICAgfQ0KICAgICAgfSwNCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwgLy8g5Yid5aeL5Yqg6L295pe25Lmf6Kem5Y+RDQogICAgfSwNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLmluaXRNYXAoKTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGluaXRNYXAoKSB7DQogICAgICAvLyDnoa7kv50gRE9NIOW3suWKoOi9veW5tuWtmOWcqA0KICAgICAgY29uc3QgbWFwQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1hcCIpOw0KICAgICAgaWYgKCFtYXBDb250YWluZXIpIHsNCiAgICAgICAgY29uc29sZS5lcnJvcigi5Zyw5Zu+5a655Zmo5pyq5om+5Yiw77yBIik7DQogICAgICAgIHJldHVybjsNCiAgICAgIH0NCg0KICAgICAgdHJ5IHsNCiAgICAgICAgLy8g5Yid5aeL5YyW5Zyw5Zu+77yM6buY6K6k5Lit5b+D54K56K6+572u5Li654ix5bCU5YWwDQogICAgICAgIHRoaXMubWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChtYXBDb250YWluZXIsIHsNCiAgICAgICAgICBjZW50ZXI6IHsgbGF0OiA1My40MTI5MSwgbG5nOiAtOC4yNDM4OSB9LCAvLyDpu5jorqTkuK3lv4PlnZDmoIcNCiAgICAgICAgICB6b29tOiA3LCAvLyDliJ3lp4vnvKnmlL7nuqfliKsNCiAgICAgICAgfSk7DQoNCiAgICAgICAgdGhpcy5pc01hcExvYWRlZCA9IHRydWU7IC8vIOagh+iusOWcsOWbvuWKoOi9veaIkOWKnw0KDQogICAgICAgIC8vIOWmguaenOWIneWniyBgY2FudGluZGl6aGlgIOWtmOWcqO+8jOW5s+enu+inhuinkuWIsOaMh+WumuS9jee9rg0KICAgICAgICBpZiAodGhpcy5jYW50aW5kaXpoaSAmJiB0aGlzLmNhbnRpbmRpemhpLmxhdCAmJiB0aGlzLmNhbnRpbmRpemhpLmxuZykgew0KICAgICAgICAgIHRoaXMuYW5pbWF0ZVBhblRvKHRoaXMuY2FudGluZGl6aGkpOw0KICAgICAgICB9DQoNCiAgICAgICAgLy8g5re75Yqg5Zyw5Zu+56e75Yqo5LqL5Lu255uR5ZCs77yM56e75Yqo5pe25YWz6Zet5by556qXDQogICAgICAgIHRoaXMubWFwLmFkZExpc3RlbmVyKCdkcmFnc3RhcnQnLCAoKSA9PiB7DQogICAgICAgICAgdGhpcy5zaG93Q3VzdG9tSW5mb1dpbmRvdyA9IGZhbHNlOw0KICAgICAgICB9KTsNCg0KICAgICAgICAvLyDmt7vliqDlnLDlm77nvKnmlL7kuovku7bnm5HlkKzvvIznvKnmlL7ml7blhbPpl63lvLnnqpcNCiAgICAgICAgdGhpcy5tYXAuYWRkTGlzdGVuZXIoJ3pvb21fY2hhbmdlZCcsICgpID0+IHsNCiAgICAgICAgICB0aGlzLnNob3dDdXN0b21JbmZvV2luZG93ID0gZmFsc2U7DQogICAgICAgIH0pOw0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgY29uc29sZS5lcnJvcigi5Zyw5Zu+5Yqg6L295aSx6LSl77yaIiwgZXJyb3IpOw0KICAgICAgICB0aGlzLnJldHJ5TG9hZE1hcCgpOyAvLyDlpoLmnpzliqDovb3lpLHotKXvvIzlsJ3or5Xph43mlrDliqDovb0NCiAgICAgIH0NCiAgICB9LA0KICAgIHJldHJ5TG9hZE1hcCgpIHsNCiAgICAgIC8vIOmHjeaWsOWwneivleWKoOi9veWcsOWbvg0KICAgICAgY29uc29sZS5sb2coIuWwneivlemHjeaWsOWKoOi9veWcsOWbvi4uLiIpOw0KICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgIHRoaXMuaW5pdE1hcCgpOw0KICAgICAgfSwgMTAwMCk7IC8vIOW7tui/nyAxIOenkumHjeaWsOWwneivlQ0KICAgIH0sDQogICAgYW5pbWF0ZVBhblRvKGxvY2F0aW9uKSB7DQogICAgICBjb25zb2xlLmxvZyhsb2NhdGlvbiwgImxvY2F0aW9ucyIpOw0KDQogICAgICAvLyDkvb/nlKggc2V0SW50ZXJ2YWwg5a6e546w5bmz56e75Yqo55S7DQogICAgICBjb25zdCBzdGVwcyA9IDMwOyAvLyDliqjnlLvnmoTmraXmlbANCiAgICAgIGNvbnN0IGludGVydmFsVGltZSA9IDIwOyAvLyDmr4/mraXpl7TpmpTnmoTml7bpl7TvvIjmr6vnp5LvvIkNCg0KICAgICAgY29uc3Qgc3RhcnRMYXQgPSB0aGlzLm1hcC5nZXRDZW50ZXIoKS5sYXQoKTsNCiAgICAgIGNvbnN0IHN0YXJ0TG5nID0gdGhpcy5tYXAuZ2V0Q2VudGVyKCkubG5nKCk7DQoNCiAgICAgIGNvbnN0IGRlbHRhTGF0ID0gKGxvY2F0aW9uLmxhdCAtIHN0YXJ0TGF0KSAvIHN0ZXBzOw0KICAgICAgY29uc3QgZGVsdGFMbmcgPSAobG9jYXRpb24ubG5nIC0gc3RhcnRMbmcpIC8gc3RlcHM7DQoNCiAgICAgIGxldCBjdXJyZW50U3RlcCA9IDA7DQoNCiAgICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgICBjdXJyZW50U3RlcCsrOw0KICAgICAgICBjb25zdCBsYXQgPSBzdGFydExhdCArIGRlbHRhTGF0ICogY3VycmVudFN0ZXA7DQogICAgICAgIGNvbnN0IGxuZyA9IHN0YXJ0TG5nICsgZGVsdGFMbmcgKiBjdXJyZW50U3RlcDsNCg0KICAgICAgICB0aGlzLm1hcC5zZXRDZW50ZXIoeyBsYXQsIGxuZyB9KTsNCg0KICAgICAgICBpZiAoY3VycmVudFN0ZXAgPj0gc3RlcHMpIHsNCiAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTsNCiAgICAgICAgICB0aGlzLm1hcC5zZXRDZW50ZXIoeyBsYXQ6IGxvY2F0aW9uLmxhdCwgbG5nOiBsb2NhdGlvbi5sbmcgfSk7DQogICAgICAgICAgdGhpcy5tYXAuc2V0Wm9vbSgxOCk7IC8vIOaUvuWkp+WcsOWbvg0KDQogICAgICAgICAgLy8g5pu05paw5qCH6K6wDQogICAgICAgICAgdGhpcy5jbGVhck1hcmtlcnMoKTsNCiAgICAgICAgICB0aGlzLmFkZE1hcmtlcihsb2NhdGlvbik7DQogICAgICAgIH0NCiAgICAgIH0sIGludGVydmFsVGltZSk7DQogICAgfSwNCiAgICBhZGRNYXJrZXIobG9jYXRpb24pIHsNCiAgICAgIGNvbnN0IG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoew0KICAgICAgICBwb3NpdGlvbjogeyBsYXQ6IGxvY2F0aW9uLmxhdCwgbG5nOiBsb2NhdGlvbi5sbmcgfSwNCiAgICAgICAgbWFwOiB0aGlzLm1hcCwNCiAgICAgICAgdGl0bGU6IGxvY2F0aW9uLnRpdGxlIHx8ICJMb2NhdGlvbiIsDQogICAgICB9KTsNCg0KICAgICAgLy8g5Yib5bu65LiA5Liq5YWo5bGA55qEIG92ZXJsYXkg5a6e5L6LDQogICAgICBjb25zdCBvdmVybGF5ID0gbmV3IGdvb2dsZS5tYXBzLk92ZXJsYXlWaWV3KCk7DQogICAgICBvdmVybGF5LmRyYXcgPSBmdW5jdGlvbigpIHt9Ow0KICAgICAgb3ZlcmxheS5zZXRNYXAodGhpcy5tYXApOw0KDQogICAgICBtYXJrZXIuYWRkTGlzdGVuZXIoImNsaWNrIiwgKCkgPT4gew0KICAgICAgICBjb25zb2xlLmxvZygiTWFya2VyIGNsaWNrZWQiKTsNCiAgICAgICAgY29uc3QgbWFya2VyUG9zaXRpb24gPSBtYXJrZXIuZ2V0UG9zaXRpb24oKTsNCg0KICAgICAgICBjb25zdCBjYWxjdWxhdGVQb3NpdGlvbiA9ICgpID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZygiQ2FsY3VsYXRpbmcgcG9zaXRpb24iKTsNCiAgICAgICAgICBjb25zdCBwcm9qZWN0aW9uID0gb3ZlcmxheS5nZXRQcm9qZWN0aW9uKCk7DQogICAgICAgICAgY29uc3QgcG9pbnQgPSBwcm9qZWN0aW9uLmZyb21MYXRMbmdUb0NvbnRhaW5lclBpeGVsKG1hcmtlclBvc2l0aW9uKTsNCg0KICAgICAgICAgIHRoaXMuc2VsZWN0ZWRMb2NhdGlvbiA9IGxvY2F0aW9uOw0KICAgICAgICAgIHRoaXMuY3VycmVudFJhdGluZyA9IGxvY2F0aW9uLnVzZXJSYXRpbmcgfHwgMDsNCiAgICAgICAgICB0aGlzLmluZm9XaW5kb3dQb3NpdGlvbiA9IHsNCiAgICAgICAgICAgIHRvcDogYCR7cG9pbnQueX1weGAsDQogICAgICAgICAgICBsZWZ0OiBgJHtwb2ludC54fXB4YA0KICAgICAgICAgIH07DQoNCiAgICAgICAgICB0aGlzLnNob3dDdXN0b21JbmZvV2luZG93ID0gdHJ1ZTsNCiAgICAgICAgfTsNCg0KICAgICAgICAvLyDlpoLmnpwgcHJvamVjdGlvbiDlt7Lnu4/lh4blpIflpb0NCiAgICAgICAgaWYgKG92ZXJsYXkuZ2V0UHJvamVjdGlvbigpKSB7DQogICAgICAgICAgY2FsY3VsYXRlUG9zaXRpb24oKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAvLyDlpoLmnpwgcHJvamVjdGlvbiDov5jmsqHlh4blpIflpb3vvIznrYnlvoXlroPlh4blpIflpb3lubbnq4vljbPorqHnrpcNCiAgICAgICAgICBvdmVybGF5LmFkZExpc3RlbmVyKCdhZGQnLCAoKSA9PiB7DQogICAgICAgICAgICBzZXRUaW1lb3V0KGNhbGN1bGF0ZVBvc2l0aW9uLCAxMDApOyAvLyDmt7vliqDlsI/lu7bov5/noa7kv50gcHJvamVjdGlvbiDlrozlhajlh4blpIflpb0NCiAgICAgICAgICB9KTsNCiAgICAgICAgfQ0KICAgICAgfSk7DQoNCiAgICAgIHRoaXMubWFya2Vycy5wdXNoKG1hcmtlcik7DQogICAgfSwNCiAgICBjbGVhck1hcmtlcnMoKSB7DQogICAgICAvLyDmuIXpmaTlnLDlm77kuIrnmoTmoIforrANCiAgICAgIHRoaXMubWFya2Vycy5mb3JFYWNoKChtYXJrZXIpID0+IG1hcmtlci5zZXRNYXAobnVsbCkpOw0KICAgICAgdGhpcy5tYXJrZXJzID0gW107DQogICAgfSwNCiAgICByYXRlTG9jYXRpb24odmFsdWUpIHsNCiAgICAgIHRoaXMuc2VsZWN0ZWRMb2NhdGlvbi51c2VyUmF0aW5nID0gdmFsdWU7DQogICAgICByYXRlKHtpZDp0aGlzLnNlbGVjdGVkTG9jYXRpb24uaWQsc2NvcmU6dmFsdWV9KS50aGVuKHJlcz0+ew0KICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuivhOWIhuaIkOWKnyIpOw0KICAgICAgfSkNCiAgICB9LA0KICB9LA0KfTsNCg=="},{"version":3,"sources":["gugeMap.vue"],"names":[],"mappings":";AAmfile":"gugeMap.vue","sourceRoot":"src/views/emergencyDispatch","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 地图容器 -->\r\n    <div id=\"map\" style=\"width: 100%; height: 100vh;\"></div>\r\n\r\n    <!-- 自定义弹窗 -->\r\n    <div v-if=\"showCustomInfoWindow\" class=\"custom-info-window\" :style=\"{\r\n      top: infoWindowPosition.top,\r\n      left: infoWindowPosition.left\r\n    }\">\r\n      <div class=\"info-header\">\r\n        <h3>{{ selectedLocation.name || \"暂无信息\" }}</h3>\r\n        <span class=\"close-btn\" @click=\"showCustomInfoWindow = false\">&times;</span>\r\n      </div>\r\n      <div class=\"info-image\">\r\n        <img\r\n          :src=\"selectedLocation.image || require('@/assets/imgs/image.png')\"\r\n          :alt=\"selectedLocation.name\"\r\n        >\r\n      </div>\r\n      <div class=\"info-content\">\r\n        <div class=\"info-item\">\r\n          <strong>营业时间：</strong>\r\n          <span>{{ selectedLocation.businessHours || \"暂无\" }}</span>\r\n        </div>\r\n        <div class=\"info-item\">\r\n          <strong>当前评分：</strong>\r\n          <el-rate\r\n            v-model=\"selectedLocation.score\"\r\n            disabled\r\n            show-score\r\n            text-color=\"#ff9900\"\r\n            score-template=\"{value}分\"\r\n          />\r\n        </div>\r\n        <div class=\"rating-system\">\r\n          <strong>为餐厅评分：</strong>\r\n          <el-rate\r\n            v-model=\"currentRating\"\r\n            :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\"\r\n            @change=\"rateLocation\"\r\n            show-text\r\n            :texts=\"['很差', '较差', '一般', '不错', '很好']\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { rate,getlist} from '@/api'\r\nexport default {\r\n  name: \"GoogleMap\",\r\n  props: {\r\n    cantindizhi: Object, // 单个对象\r\n  },\r\n  data() {\r\n    return {\r\n      map: null, // 地图实例\r\n      markers: [], // 当前标记数组\r\n      isMapLoaded: false, // 用于标记地图是否加载完成\r\n      showCustomInfoWindow: false, // 控制自定义弹窗显示\r\n      selectedLocation: {}, // 当前选中的位置信息\r\n      currentRating: 0, // 当前评分\r\n      infoWindowPosition: {\r\n        top: '0px',\r\n        left: '0px'\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    cantindizhi: {\r\n      handler(newVal) {\r\n        console.log(newVal, \"newVal\");\r\n        if (this.isMapLoaded && newVal && newVal.lat && newVal.lng) {\r\n          newVal.lat = Number(newVal.lat)\r\n          newVal.lng = Number(newVal.lng)\r\n          newVal.score = Number(newVal.score)\r\n          this.animatePanTo(newVal); // 使用动画平移到位置\r\n        }\r\n      },\r\n      immediate: true, // 初始加载时也触发\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      // 确保 DOM 已加载并存在\r\n      const mapContainer = document.getElementById(\"map\");\r\n      if (!mapContainer) {\r\n        console.error(\"地图容器未找到！\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // 初始化地图，默认中心点设置为爱尔兰\r\n        this.map = new google.maps.Map(mapContainer, {\r\n          center: { lat: 53.41291, lng: -8.24389 }, // 默认中心坐标\r\n          zoom: 7, // 初始缩放级别\r\n        });\r\n\r\n        this.isMapLoaded = true; // 标记地图加载成功\r\n\r\n        // 如果初始 `cantindizhi` 存在，平移视角到指定位置\r\n        if (this.cantindizhi && this.cantindizhi.lat && this.cantindizhi.lng) {\r\n          this.animatePanTo(this.cantindizhi);\r\n        }\r\n\r\n        // 添加地图移动事件监听，移动时关闭弹窗\r\n        this.map.addListener('dragstart', () => {\r\n          this.showCustomInfoWindow = false;\r\n        });\r\n\r\n        // 添加地图缩放事件监听，缩放时关闭弹窗\r\n        this.map.addListener('zoom_changed', () => {\r\n          this.showCustomInfoWindow = false;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"地图加载失败：\", error);\r\n        this.retryLoadMap(); // 如果加载失败，尝试重新加载\r\n      }\r\n    },\r\n    retryLoadMap() {\r\n      // 重新尝试加载地图\r\n      console.log(\"尝试重新加载地图...\");\r\n      setTimeout(() => {\r\n        this.initMap();\r\n      }, 1000); // 延迟 1 秒重新尝试\r\n    },\r\n    animatePanTo(location) {\r\n      console.log(location, \"locations\");\r\n\r\n      // 使用 setInterval 实现平移动画\r\n      const steps = 30; // 动画的步数\r\n      const intervalTime = 20; // 每步间隔的时间（毫秒）\r\n\r\n      const startLat = this.map.getCenter().lat();\r\n      const startLng = this.map.getCenter().lng();\r\n\r\n      const deltaLat = (location.lat - startLat) / steps;\r\n      const deltaLng = (location.lng - startLng) / steps;\r\n\r\n      let currentStep = 0;\r\n\r\n      const interval = setInterval(() => {\r\n        currentStep++;\r\n        const lat = startLat + deltaLat * currentStep;\r\n        const lng = startLng + deltaLng * currentStep;\r\n\r\n        this.map.setCenter({ lat, lng });\r\n\r\n        if (currentStep >= steps) {\r\n          clearInterval(interval);\r\n          this.map.setCenter({ lat: location.lat, lng: location.lng });\r\n          this.map.setZoom(18); // 放大地图\r\n\r\n          // 更新标记\r\n          this.clearMarkers();\r\n          this.addMarker(location);\r\n        }\r\n      }, intervalTime);\r\n    },\r\n    addMarker(location) {\r\n      const marker = new google.maps.Marker({\r\n        position: { lat: location.lat, lng: location.lng },\r\n        map: this.map,\r\n        title: location.title || \"Location\",\r\n      });\r\n\r\n      // 创建一个全局的 overlay 实例\r\n      const overlay = new google.maps.OverlayView();\r\n      overlay.draw = function() {};\r\n      overlay.setMap(this.map);\r\n\r\n      marker.addListener(\"click\", () => {\r\n        console.log(\"Marker clicked\");\r\n        const markerPosition = marker.getPosition();\r\n\r\n        const calculatePosition = () => {\r\n          console.log(\"Calculating position\");\r\n          const projection = overlay.getProjection();\r\n          const point = projection.fromLatLngToContainerPixel(markerPosition);\r\n\r\n          this.selectedLocation = location;\r\n          this.currentRating = location.userRating || 0;\r\n          this.infoWindowPosition = {\r\n            top: `${point.y}px`,\r\n            left: `${point.x}px`\r\n          };\r\n\r\n          this.showCustomInfoWindow = true;\r\n        };\r\n\r\n        // 如果 projection 已经准备好\r\n        if (overlay.getProjection()) {\r\n          calculatePosition();\r\n        } else {\r\n          // 如果 projection 还没准备好，等待它准备好并立即计算\r\n          overlay.addListener('add', () => {\r\n            setTimeout(calculatePosition, 100); // 添加小延迟确保 projection 完全准备好\r\n          });\r\n        }\r\n      });\r\n\r\n      this.markers.push(marker);\r\n    },\r\n    clearMarkers() {\r\n      // 清除地图上的标记\r\n      this.markers.forEach((marker) => marker.setMap(null));\r\n      this.markers = [];\r\n    },\r\n    rateLocation(value) {\r\n      this.selectedLocation.userRating = value;\r\n      rate({id:this.selectedLocation.id,score:value}).then(res=>{\r\n        this.$message.success(\"评分成功\");\r\n      })\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 地图样式 */\r\n#map {\r\n  width: 100%;\r\n  height: 100vh;\r\n}\r\n\r\n.custom-info-window {\r\n  position: absolute;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n  min-width: 350px;\r\n  max-width: 450px;\r\n  transform: translate(-50%, -100%);\r\n}\r\n\r\n.info-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.info-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.close-btn {\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  color: #666;\r\n}\r\n\r\n.info-content {\r\n  color: #666;\r\n}\r\n\r\n.info-item {\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.rating-system {\r\n  margin-top: 15px;\r\n  padding-top: 15px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.info-image {\r\n  margin: -20px -20px 15px -20px; /* 使图片延伸到边缘 */\r\n  overflow: hidden;\r\n  height: 150px; /* 固定图片容器高度 */\r\n}\r\n\r\n.info-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 确保图片填充整个容器 */\r\n  display: block;\r\n}\r\n\r\n/* 调整 el-rate 的样式 */\r\n:deep(.el-rate) {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n:deep(.el-rate__text) {\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n</style>\r\n"]}]}