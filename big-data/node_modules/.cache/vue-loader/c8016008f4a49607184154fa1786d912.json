{"remainingRequest":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\src\\views\\Login.vue","mtime":1742863077347},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\css-loader\\dist\\cjs.js","mtime":1742859681121},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1742859685007},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\postcss-loader\\src\\index.js","mtime":1742859682771},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742859679583},{"path":"C:\\Users\\18167\\Desktop\\final year\\big-data\\node_modules\\vue-loader\\lib\\index.js","mtime":1742859683968}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubG9naW4tY29udGFpbmVyIHsNCiAgd2lkdGg6IDMwMHB4Ow0KICBwYWRkaW5nOiAyMHB4Ow0KICBiYWNrZ3JvdW5kOiB3aGl0ZTsNCiAgYm94LXNoYWRvdzogMCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7DQogIGJvcmRlci1yYWRpdXM6IDhweDsNCiAgcG9zaXRpb246IGZpeGVkOw0KICB0b3A6IDUwJTsNCiAgbGVmdDogNTAlOw0KICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsNCiAgei1pbmRleDogMTAwMDsNCn0NCi5mb3JtLWdyb3VwIHsNCiAgbWFyZ2luLWJvdHRvbTogMTVweDsNCn0NCmxhYmVsIHsNCiAgZGlzcGxheTogYmxvY2s7DQogIG1hcmdpbi1ib3R0b206IDEwcHg7DQogIGZvbnQtc2l6ZTogMTZweDsNCiAgY29sb3I6ICMzMzM7DQp9DQppbnB1dCB7DQogIHdpZHRoOiAxMDAlOw0KICBwYWRkaW5nOiA4cHg7DQogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7DQogIGJvcmRlci1yYWRpdXM6IDRweDsNCn0NCmJ1dHRvbiB7DQogIHdpZHRoOiAxMDAlOw0KICBwYWRkaW5nOiAxMHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmOw0KICBib3JkZXI6IG5vbmU7DQogIGNvbG9yOiB3aGl0ZTsNCiAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICBjdXJzb3I6IHBvaW50ZXI7DQp9DQpidXR0b246aG92ZXIgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzOw0KfQ0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAgHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"login\">\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email:</label>\r\n        <input id=\"email\" v-model=\"user.email\" type=\"email\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password:</label>\r\n        <input id=\"password\" v-model=\"user.password\" type=\"password\" required>\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n    <button @click=\"$emit('close')\">Close</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      user: {\r\n        email: '',\r\n        password: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        // 简单的登录数据\r\n        const loginData = {\r\n          email: this.user.email,\r\n          password: this.user.password\r\n        };\r\n\r\n        console.log(\"Login data:\", loginData);\r\n\r\n        // 发送登录请求\r\n        const response = await axios.post(\r\n          \"http://localhost:8080/api/users/login\", \r\n          loginData\r\n        );\r\n\r\n        console.log(\"Login response:\", response);\r\n\r\n        // 检查响应数据结构\r\n        if (response.data && response.data.code === 200 && response.data.data) {\r\n          // 标准 R<T> 响应格式\r\n          const userData = response.data.data;\r\n          console.log(\"Login successful, user data (R format):\", userData);\r\n          \r\n          // 保存用户信息\r\n          localStorage.setItem(\"userId\", userData.id);\r\n          localStorage.setItem(\"userName\", userData.username);\r\n          localStorage.setItem(\"userRole\", userData.role);\r\n          localStorage.setItem(\"userEmail\", userData.email);\r\n        } else if (response.status === 200 && typeof response.data === 'object') {\r\n          // 直接返回用户对象的情况\r\n          const userData = response.data;\r\n          console.log(\"Login successful, user data (direct object):\", userData);\r\n          \r\n          // 保存用户信息\r\n          localStorage.setItem(\"userId\", userData.id);\r\n          localStorage.setItem(\"userName\", userData.username);\r\n          localStorage.setItem(\"userRole\", userData.role);\r\n          localStorage.setItem(\"userEmail\", userData.email);\r\n        } else {\r\n          throw new Error(\"Invalid response format\");\r\n        }\r\n\r\n        // 成功提示和事件\r\n        this.$message.success(\"Login successful\");\r\n        this.$emit(\"close\");\r\n        this.$emit(\"login-success\", {\r\n          userId: localStorage.getItem(\"userId\"),\r\n          userName: localStorage.getItem(\"userName\")\r\n        });\r\n        \r\n        // 发送通知 - 使用全局事件总线\r\n        this.$root.$emit('user-logged-in', {\r\n          userId: localStorage.getItem(\"userId\"),\r\n          userName: localStorage.getItem(\"userName\")\r\n        });\r\n        \r\n        // 显示存储的信息用于调试\r\n        console.log(\"Stored information after login:\", {\r\n          userId: localStorage.getItem(\"userId\"),\r\n          userName: localStorage.getItem(\"userName\"),\r\n          userRole: localStorage.getItem(\"userRole\"),\r\n          userEmail: localStorage.getItem(\"userEmail\")\r\n        });\r\n        \r\n        // 强制所有组件更新登录状态\r\n        setTimeout(() => {\r\n          window.dispatchEvent(new Event('storage'));\r\n        }, 100);\r\n      } catch (error) {\r\n        console.error(\"Login failed:\", error);\r\n        this.$message.error(\"Login failed: \" + (error.message || \"Please check your email and password\"));\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.login-container {\r\n  width: 300px;\r\n  padding: 20px;\r\n  background: white;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 1000;\r\n}\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n\r\n"]}]}